{
  "openapi": "3.0.0",
  "paths": {
    "/api/dashboard/address/paginate/{userId}": {
      "get": {
        "operationId": "AddressController_paginate",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skip",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "example": 1,
              "type": "string"
            }
          },
          {
            "name": "take",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "example": 10,
              "type": "string"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Array string",
            "schema": {
              "example": "yourSelector,asc",
              "type": "string"
            }
          },
          {
            "name": "group",
            "required": false,
            "in": "query",
            "description": "Array object",
            "schema": {
              "example": "[{\"selector\":\"status\",\"search\":\"hello\",filter:[{\n         \"id\":\"last_name\",\n         \"type\":\"SELECT\",\n         \"selecteds\":[\n            \"Kör\"\n         ]\n      }]}]",
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "Array string",
            "schema": {
              "example": "[\n        {\n           \"id\":\"first_name\",\n           \"type\":\"SELECT\",\n           \"selecteds\":[\n              \"KonutKonfor\",\n              \"Feyyaz Can\"\n           ]\n        },\n        {\n           \"id\":\"last_name\",\n           \"type\":\"SELECT\",\n           \"selecteds\":[\n              \"Kör\"\n           ]\n        },\n        {\n           \"id\":\"amount\",\n           \"type\":\"NUMBER\",\n           \"min\":0,\n           \"max\":10000\n        },\n        {\n           \"id\":\"created_at\",\n           \"type\":\"DATE\",\n           \"min\":2012,\n           \"max\":2022\n        },\n        {\n          \"id\":\"global_search\",\n          \"type\":\"SEARCH\",\n          \"value\":\"Denem\",\n          \"columns\":[\n             {\n                \"id\":\"first_name\",\n                \"type\":\"string\"\n             },\n             {\n                \"id\":\"last_name\",\n                \"type\":\"string\"\n             },\n             {\n                \"id\":\"id\",\n                \"type\":\"number\"\n             }\n          ]\n       }\n     ]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful paginated response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "anyOf": [
                            {
                              "$ref": "#/components/schemas/AddressPaginateDto"
                            },
                            {
                              "$ref": "#/components/schemas/FilterGroupDto"
                            }
                          ]
                        }
                      }
                    }
                  ]
                },
                "examples": {
                  "paginated_response": {
                    "summary": "Paginated address response",
                    "value": {
                      "success": true,
                      "message": "Operation completed successfully",
                      "code": 200,
                      "data": {
                        "items": [
                          {
                            "id": "example_id",
                            "title": "Example Address"
                          }
                        ],
                        "meta": {
                          "totalItems": 1,
                          "itemCount": 1,
                          "itemsPerPage": 10,
                          "totalPages": 1,
                          "currentPage": 1
                        },
                        "links": {
                          "first": "string",
                          "previous": "string",
                          "next": "string",
                          "last": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "List address paginate",
        "tags": ["Address"]
      }
    },
    "/api/dashboard/address": {
      "post": {
        "operationId": "AddressController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddressCreateOrUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SuccessResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Create address",
        "tags": ["Address"]
      }
    },
    "/api/dashboard/address/all/{userId}": {
      "get": {
        "operationId": "AddressController_getAll",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AddressListDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Get all address",
        "tags": ["Address"]
      }
    },
    "/api/dashboard/address/{id}": {
      "put": {
        "operationId": "AddressController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddressCreateOrUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SuccessResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Update address",
        "tags": ["Address"]
      },
      "get": {
        "operationId": "AddressController_getById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AddressDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Get address",
        "tags": ["Address"]
      },
      "delete": {
        "operationId": "AddressController_delete",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SuccessResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Delete address",
        "tags": ["Address"]
      }
    },
    "/api/dashboard/auth/signin": {
      "post": {
        "operationId": "AuthController_login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AuthResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "summary": "User login",
        "tags": ["Auth"]
      }
    },
    "/api/dashboard/reports/average-discount": {
      "get": {
        "operationId": "AverageDiscountController_getAverageDiscount",
        "parameters": [
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "description": "Start date for the report (ISO format)",
            "schema": {
              "example": "2023-01-01",
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "description": "End date for the report (ISO format)",
            "schema": {
              "example": "2023-12-31",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AverageDiscountDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Get average discount report",
        "tags": ["Reports"]
      }
    },
    "/api/dashboard/reports/average-discount/export": {
      "get": {
        "operationId": "AverageDiscountController_exportAverageDiscount",
        "parameters": [
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "description": "Start date for the report (ISO format)",
            "schema": {
              "example": "2023-01-01",
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "description": "End date for the report (ISO format)",
            "schema": {
              "example": "2023-12-31",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Export average discount report as CSV",
        "tags": ["Reports"]
      }
    },
    "/api/dashboard/reports/average-days-on-market": {
      "get": {
        "operationId": "AverageDaysOnMarketController_getAverageDaysOnMarket",
        "parameters": [
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "description": "Start date for the report (ISO format)",
            "schema": {
              "example": "2023-01-01",
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "description": "End date for the report (ISO format)",
            "schema": {
              "example": "2023-12-31",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AverageDaysOnMarketDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Get average days on market report",
        "tags": ["Reports"]
      }
    },
    "/api/dashboard/reports/average-days-on-market/export": {
      "get": {
        "operationId": "AverageDaysOnMarketController_exportAverageDaysOnMarket",
        "parameters": [
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "description": "Start date for the report (ISO format)",
            "schema": {
              "example": "2023-01-01",
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "description": "End date for the report (ISO format)",
            "schema": {
              "example": "2023-12-31",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Export average days on market report as CSV",
        "tags": ["Reports"]
      }
    },
    "/api/dashboard/reports/average-order-value": {
      "get": {
        "operationId": "AverageOrderValueController_getAverageOrderValue",
        "parameters": [
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "description": "Start date for the report (ISO format)",
            "schema": {
              "example": "2023-01-01",
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "description": "End date for the report (ISO format)",
            "schema": {
              "example": "2023-12-31",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AverageOrderValueDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Get average order value report",
        "tags": ["Reports"]
      }
    },
    "/api/dashboard/reports/average-order-value/export": {
      "get": {
        "operationId": "AverageOrderValueController_exportAverageOrderValue",
        "parameters": [
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "description": "Start date for the report (ISO format)",
            "schema": {
              "example": "2023-01-01",
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "description": "End date for the report (ISO format)",
            "schema": {
              "example": "2023-12-31",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Export average order value report as CSV",
        "tags": ["Reports"]
      }
    },
    "/api/dashboard/bank-transfer": {
      "get": {
        "operationId": "BankTransferController_paginate",
        "parameters": [
          {
            "name": "skip",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "example": 1,
              "type": "string"
            }
          },
          {
            "name": "take",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "example": 10,
              "type": "string"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Array string",
            "schema": {
              "example": "yourSelector,asc",
              "type": "string"
            }
          },
          {
            "name": "group",
            "required": false,
            "in": "query",
            "description": "Array object",
            "schema": {
              "example": "[{\"selector\":\"status\",\"search\":\"hello\",filter:[{\n         \"id\":\"last_name\",\n         \"type\":\"SELECT\",\n         \"selecteds\":[\n            \"Kör\"\n         ]\n      }]}]",
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "Array string",
            "schema": {
              "example": "[\n        {\n           \"id\":\"first_name\",\n           \"type\":\"SELECT\",\n           \"selecteds\":[\n              \"KonutKonfor\",\n              \"Feyyaz Can\"\n           ]\n        },\n        {\n           \"id\":\"last_name\",\n           \"type\":\"SELECT\",\n           \"selecteds\":[\n              \"Kör\"\n           ]\n        },\n        {\n           \"id\":\"amount\",\n           \"type\":\"NUMBER\",\n           \"min\":0,\n           \"max\":10000\n        },\n        {\n           \"id\":\"created_at\",\n           \"type\":\"DATE\",\n           \"min\":2012,\n           \"max\":2022\n        },\n        {\n          \"id\":\"global_search\",\n          \"type\":\"SEARCH\",\n          \"value\":\"Denem\",\n          \"columns\":[\n             {\n                \"id\":\"first_name\",\n                \"type\":\"string\"\n             },\n             {\n                \"id\":\"last_name\",\n                \"type\":\"string\"\n             },\n             {\n                \"id\":\"id\",\n                \"type\":\"number\"\n             }\n          ]\n       }\n     ]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful paginated response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "anyOf": [
                            {
                              "$ref": "#/components/schemas/BankTransferPaginateDto"
                            },
                            {
                              "$ref": "#/components/schemas/FilterGroupDto"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "List bank transfer paginate",
        "tags": ["Bank Transfer"]
      },
      "post": {
        "operationId": "BankTransferController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankTransferCreateOrUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SuccessResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Create bank transfer",
        "tags": ["Bank Transfer"]
      }
    },
    "/api/dashboard/bank-transfer/all": {
      "get": {
        "operationId": "BankTransferController_getAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/BankTransferListDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Get bank transfers",
        "tags": ["Bank Transfer"]
      }
    },
    "/api/dashboard/bank-transfer/{id}": {
      "put": {
        "operationId": "BankTransferController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankTransferCreateOrUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SuccessResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Update bank transfer",
        "tags": ["Bank Transfer"]
      },
      "get": {
        "operationId": "BankTransferController_getById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CurrencyDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Get bank transfer",
        "tags": ["Bank Transfer"]
      },
      "delete": {
        "operationId": "BankTransferController_delete",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SuccessResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Delete bank transfer",
        "tags": ["Bank Transfer"]
      }
    },
    "/api/dashboard/cart-item/{userId}": {
      "get": {
        "operationId": "CartItemController_paginate",
        "parameters": [
          {
            "name": "skip",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "example": 1,
              "type": "string"
            }
          },
          {
            "name": "take",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "example": 10,
              "type": "string"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Array string",
            "schema": {
              "example": "yourSelector,asc",
              "type": "string"
            }
          },
          {
            "name": "group",
            "required": false,
            "in": "query",
            "description": "Array object",
            "schema": {
              "example": "[{\"selector\":\"status\",\"search\":\"hello\",filter:[{\n         \"id\":\"last_name\",\n         \"type\":\"SELECT\",\n         \"selecteds\":[\n            \"Kör\"\n         ]\n      }]}]",
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "Array string",
            "schema": {
              "example": "[\n        {\n           \"id\":\"first_name\",\n           \"type\":\"SELECT\",\n           \"selecteds\":[\n              \"KonutKonfor\",\n              \"Feyyaz Can\"\n           ]\n        },\n        {\n           \"id\":\"last_name\",\n           \"type\":\"SELECT\",\n           \"selecteds\":[\n              \"Kör\"\n           ]\n        },\n        {\n           \"id\":\"amount\",\n           \"type\":\"NUMBER\",\n           \"min\":0,\n           \"max\":10000\n        },\n        {\n           \"id\":\"created_at\",\n           \"type\":\"DATE\",\n           \"min\":2012,\n           \"max\":2022\n        },\n        {\n          \"id\":\"global_search\",\n          \"type\":\"SEARCH\",\n          \"value\":\"Denem\",\n          \"columns\":[\n             {\n                \"id\":\"first_name\",\n                \"type\":\"string\"\n             },\n             {\n                \"id\":\"last_name\",\n                \"type\":\"string\"\n             },\n             {\n                \"id\":\"id\",\n                \"type\":\"number\"\n             }\n          ]\n       }\n     ]",
              "type": "string"
            }
          },
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful paginated response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "anyOf": [
                            {
                              "$ref": "#/components/schemas/CartItemPaginateDto"
                            },
                            {
                              "$ref": "#/components/schemas/FilterGroupDto"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "List cart item paginate",
        "tags": ["Shopping Cart Items"]
      }
    },
    "/api/dashboard/cart-item/{id}": {
      "get": {
        "operationId": "CartItemController_getById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CartItemDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Get cart item",
        "tags": ["Shopping Cart Items"]
      },
      "delete": {
        "operationId": "CartItemController_delete",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SuccessResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Delete cart item",
        "tags": ["Shopping Cart Items"]
      }
    },
    "/api/dashboard/categories": {
      "get": {
        "operationId": "CategoryController_paginate",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "language, default en",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skip",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "example": 1,
              "type": "string"
            }
          },
          {
            "name": "take",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "example": 10,
              "type": "string"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Array string",
            "schema": {
              "example": "yourSelector,asc",
              "type": "string"
            }
          },
          {
            "name": "group",
            "required": false,
            "in": "query",
            "description": "Array object",
            "schema": {
              "example": "[{\"selector\":\"status\",\"search\":\"hello\",filter:[{\n         \"id\":\"last_name\",\n         \"type\":\"SELECT\",\n         \"selecteds\":[\n            \"Kör\"\n         ]\n      }]}]",
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "Array string",
            "schema": {
              "example": "[\n        {\n           \"id\":\"first_name\",\n           \"type\":\"SELECT\",\n           \"selecteds\":[\n              \"KonutKonfor\",\n              \"Feyyaz Can\"\n           ]\n        },\n        {\n           \"id\":\"last_name\",\n           \"type\":\"SELECT\",\n           \"selecteds\":[\n              \"Kör\"\n           ]\n        },\n        {\n           \"id\":\"amount\",\n           \"type\":\"NUMBER\",\n           \"min\":0,\n           \"max\":10000\n        },\n        {\n           \"id\":\"created_at\",\n           \"type\":\"DATE\",\n           \"min\":2012,\n           \"max\":2022\n        },\n        {\n          \"id\":\"global_search\",\n          \"type\":\"SEARCH\",\n          \"value\":\"Denem\",\n          \"columns\":[\n             {\n                \"id\":\"first_name\",\n                \"type\":\"string\"\n             },\n             {\n                \"id\":\"last_name\",\n                \"type\":\"string\"\n             },\n             {\n                \"id\":\"id\",\n                \"type\":\"number\"\n             }\n          ]\n       }\n     ]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful paginated response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "anyOf": [
                            {
                              "$ref": "#/components/schemas/CategoryPaginateDto"
                            },
                            {
                              "$ref": "#/components/schemas/FilterGroupDto"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "List category paginate",
        "tags": ["Category"]
      },
      "post": {
        "operationId": "CategoryController_create",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "language, default en",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SuccessResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Create category",
        "tags": ["Category"]
      }
    },
    "/api/dashboard/categories/category-tree-sort-update": {
      "put": {
        "operationId": "CategoryController_categoryTreeSortUpdate",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "language, default en",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryTreeSortUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SuccessResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Update category tree sort",
        "tags": ["Category"]
      }
    },
    "/api/dashboard/categories/{id}": {
      "put": {
        "operationId": "CategoryController_update",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "language, default en",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SuccessResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Update category",
        "tags": ["Category"]
      },
      "delete": {
        "operationId": "CategoryController_delete",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "language, default en",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SuccessResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Delete category",
        "tags": ["Category"]
      },
      "get": {
        "operationId": "CategoryController_getById",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "language, default en",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CategoryDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Get category",
        "tags": ["Category"]
      }
    },
    "/api/dashboard/categories/bulk": {
      "post": {
        "operationId": "CategoryController_bulkDelete",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "language, default en",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkDeleteDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SuccessResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Delete categories bulk",
        "tags": ["Category"]
      }
    },
    "/api/dashboard/categories/all": {
      "get": {
        "operationId": "CategoryController_getAll",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "language, default en",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CategoryListDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Get categories",
        "tags": ["Category"]
      }
    },
    "/api/dashboard/categories/category-find-title": {
      "get": {
        "operationId": "CategoryController_findTitle",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "language, default en",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "title",
            "required": true,
            "in": "query",
            "description": "Title of the category to search for",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CategoryBaseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Find category title",
        "tags": ["Category"]
      }
    },
    "/api/dashboard/categories/tree": {
      "get": {
        "operationId": "CategoryController_getTree",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "language, default en",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CategoryTreeDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Get nested category tree",
        "tags": ["Category"]
      }
    },
    "/api/dashboard/categories/hide/{id}": {
      "patch": {
        "operationId": "CategoryController_hideUnhide",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "language, default en",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SuccessResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Hide category",
        "tags": ["Category"]
      }
    },
    "/api/dashboard/categories/unhide/{id}": {
      "patch": {
        "operationId": "CategoryController_unHide",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "language, default en",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SuccessResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Unhide category",
        "tags": ["Category"]
      }
    },
    "/api/dashboard/certificate-badge": {
      "post": {
        "operationId": "CertificateBadgeController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CertificateBadgeCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SuccessResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Create certificate badge",
        "tags": ["Certificate Badge"]
      }
    },
    "/api/dashboard/certificate-badge/{id}": {
      "put": {
        "operationId": "CertificateBadgeController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CertificateBadgeUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SuccessResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Update certificate badge",
        "tags": ["Certificate Badge"]
      },
      "delete": {
        "operationId": "CertificateBadgeController_delete",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SuccessResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Delete certificate badge",
        "tags": ["Certificate Badge"]
      }
    },
    "/api/dashboard/certificate-provider/all": {
      "get": {
        "operationId": "CertificateProviderController_getAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CertificateProviderListDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Get certificates",
        "tags": ["Certificate Provider"]
      }
    },
    "/api/dashboard/certificate-provider": {
      "post": {
        "operationId": "CertificateProviderController_create",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SuccessResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Create certificate provider",
        "tags": ["Certificate Provider"]
      }
    },
    "/api/dashboard/certificate-provider/{id}": {
      "put": {
        "operationId": "CertificateProviderController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CertificateProviderUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SuccessResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Update certificate provider",
        "tags": ["Certificate Provider"]
      },
      "delete": {
        "operationId": "CertificateProviderController_delete",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SuccessResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Delete certificate provider",
        "tags": ["Certificate Provider"]
      }
    },
    "/api/dashboard/currencies": {
      "get": {
        "operationId": "CurrencyController_paginate",
        "parameters": [
          {
            "name": "skip",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "example": 1,
              "type": "string"
            }
          },
          {
            "name": "take",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "example": 10,
              "type": "string"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Array string",
            "schema": {
              "example": "yourSelector,asc",
              "type": "string"
            }
          },
          {
            "name": "group",
            "required": false,
            "in": "query",
            "description": "Array object",
            "schema": {
              "example": "[{\"selector\":\"status\",\"search\":\"hello\",filter:[{\n         \"id\":\"last_name\",\n         \"type\":\"SELECT\",\n         \"selecteds\":[\n            \"Kör\"\n         ]\n      }]}]",
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "Array string",
            "schema": {
              "example": "[\n        {\n           \"id\":\"first_name\",\n           \"type\":\"SELECT\",\n           \"selecteds\":[\n              \"KonutKonfor\",\n              \"Feyyaz Can\"\n           ]\n        },\n        {\n           \"id\":\"last_name\",\n           \"type\":\"SELECT\",\n           \"selecteds\":[\n              \"Kör\"\n           ]\n        },\n        {\n           \"id\":\"amount\",\n           \"type\":\"NUMBER\",\n           \"min\":0,\n           \"max\":10000\n        },\n        {\n           \"id\":\"created_at\",\n           \"type\":\"DATE\",\n           \"min\":2012,\n           \"max\":2022\n        },\n        {\n          \"id\":\"global_search\",\n          \"type\":\"SEARCH\",\n          \"value\":\"Denem\",\n          \"columns\":[\n             {\n                \"id\":\"first_name\",\n                \"type\":\"string\"\n             },\n             {\n                \"id\":\"last_name\",\n                \"type\":\"string\"\n             },\n             {\n                \"id\":\"id\",\n                \"type\":\"number\"\n             }\n          ]\n       }\n     ]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful paginated response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "anyOf": [
                            {
                              "$ref": "#/components/schemas/CurrencyPaginateDto"
                            },
                            {
                              "$ref": "#/components/schemas/FilterGroupDto"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "List currency paginate",
        "tags": ["Currencies"]
      },
      "post": {
        "operationId": "CurrencyController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyCreateOrUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SuccessResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Create currency",
        "tags": ["Currencies"]
      }
    },
    "/api/dashboard/currencies/all": {
      "get": {
        "operationId": "CurrencyController_getAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CurrencyListDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Get currencies",
        "tags": ["Currencies"]
      }
    },
    "/api/dashboard/currencies/{id}": {
      "put": {
        "operationId": "CurrencyController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CurrencyCreateOrUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SuccessResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Update currency",
        "tags": ["Currencies"]
      },
      "get": {
        "operationId": "CurrencyController_getById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CurrencyDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Get currency",
        "tags": ["Currencies"]
      },
      "delete": {
        "operationId": "CurrencyController_delete",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SuccessResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Delete currency",
        "tags": ["Currencies"]
      }
    },
    "/api/dashboard/reports/daily-sales": {
      "get": {
        "operationId": "DailySalesController_getDailySales",
        "parameters": [
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "description": "Start date for the report (ISO format)",
            "schema": {
              "example": "2023-01-01",
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "description": "End date for the report (ISO format)",
            "schema": {
              "example": "2023-12-31",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/DailySalesResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Get daily sales report",
        "tags": ["Reports"]
      }
    },
    "/api/dashboard/reports/daily-sales/export": {
      "get": {
        "operationId": "DailySalesController_exportDailySales",
        "parameters": [
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "description": "Start date for the report (ISO format)",
            "schema": {
              "example": "2023-01-01",
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "description": "End date for the report (ISO format)",
            "schema": {
              "example": "2023-12-31",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Export daily sales report as CSV",
        "tags": ["Reports"]
      }
    },
    "/api/dashboard/file-manager": {
      "get": {
        "operationId": "FileManagerController_listFiles",
        "parameters": [
          {
            "name": "path",
            "required": false,
            "in": "query",
            "description": "Directory path to list from (e.g., /folder1)",
            "schema": {
              "example": "/products",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of files and folders",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FileEntry"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Path not found"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "List files and folders",
        "tags": ["File Manager"]
      },
      "delete": {
        "operationId": "FileManagerController_deleteItem",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteFileDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Item(s) deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Path not found"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Delete files or folders",
        "tags": ["File Manager"]
      }
    },
    "/api/dashboard/file-manager/folder": {
      "post": {
        "operationId": "FileManagerController_createFolder",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFolderDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Folder created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Folder already exists or invalid input"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Create a new folder",
        "tags": ["File Manager"]
      }
    },
    "/api/dashboard/file-manager/upload": {
      "post": {
        "operationId": "FileManagerController_uploadFile",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "File Upload",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UploadFileDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "File uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "No file provided"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Upload a file",
        "tags": ["File Manager"]
      }
    },
    "/api/dashboard/file-manager/copy": {
      "post": {
        "operationId": "FileManagerController_copyItem",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CopyFileDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Item copied successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "destination": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Destination already exists or invalid input"
          },
          "404": {
            "description": "Source not found"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Copy a file or folder",
        "tags": ["File Manager"]
      }
    },
    "/api/dashboard/file-manager/move": {
      "put": {
        "operationId": "FileManagerController_moveItem",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MoveFileDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Item moved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "destination": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Source not found"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Move a file or folder",
        "tags": ["File Manager"]
      }
    },
    "/api/dashboard/file-manager/rename": {
      "patch": {
        "operationId": "FileManagerController_renameItem",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RenameFileDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Item renamed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "new_path": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Source not found"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Rename a file or folder",
        "tags": ["File Manager"]
      }
    },
    "/api/dashboard/file-manager/download/file/{path}": {
      "get": {
        "operationId": "FileManagerController_downloadFile",
        "parameters": [
          {
            "name": "path",
            "required": true,
            "in": "path",
            "description": "The S3 key/path of the file to download",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "File stream for download",
            "content": {
              "application/octet-stream": {}
            }
          },
          "400": {
            "description": "Path is a folder"
          },
          "404": {
            "description": "File not found"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Download a file",
        "tags": ["File Manager"]
      }
    },
    "/api/dashboard/file-manager/download/folder/{path}": {
      "get": {
        "operationId": "FileManagerController_downloadFolder",
        "parameters": [
          {
            "name": "path",
            "required": true,
            "in": "path",
            "description": "The S3 key/path of the folder to download",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Zip archive stream",
            "content": {
              "application/zip": {}
            }
          },
          "404": {
            "description": "Folder not found"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Download a folder as a zip archive",
        "tags": ["File Manager"]
      }
    },
    "/api/dashboard/file-manager/stream/{path}": {
      "get": {
        "operationId": "FileManagerController_streamFile",
        "parameters": [
          {
            "name": "path",
            "required": true,
            "in": "path",
            "description": "The S3 key/path of the file to stream",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "File content stream"
          },
          "400": {
            "description": "Path is a folder"
          },
          "404": {
            "description": "File not found"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Stream a file content for preview",
        "tags": ["File Manager"]
      }
    },
    "/api/dashboard/language-keyword-groups": {
      "get": {
        "operationId": "LanguageKeywordGroupController_paginate",
        "parameters": [
          {
            "name": "skip",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "example": 1,
              "type": "string"
            }
          },
          {
            "name": "take",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "example": 10,
              "type": "string"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Array string",
            "schema": {
              "example": "yourSelector,asc",
              "type": "string"
            }
          },
          {
            "name": "group",
            "required": false,
            "in": "query",
            "description": "Array object",
            "schema": {
              "example": "[{\"selector\":\"status\",\"search\":\"hello\",filter:[{\n         \"id\":\"last_name\",\n         \"type\":\"SELECT\",\n         \"selecteds\":[\n            \"Kör\"\n         ]\n      }]}]",
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "Array string",
            "schema": {
              "example": "[\n        {\n           \"id\":\"first_name\",\n           \"type\":\"SELECT\",\n           \"selecteds\":[\n              \"KonutKonfor\",\n              \"Feyyaz Can\"\n           ]\n        },\n        {\n           \"id\":\"last_name\",\n           \"type\":\"SELECT\",\n           \"selecteds\":[\n              \"Kör\"\n           ]\n        },\n        {\n           \"id\":\"amount\",\n           \"type\":\"NUMBER\",\n           \"min\":0,\n           \"max\":10000\n        },\n        {\n           \"id\":\"created_at\",\n           \"type\":\"DATE\",\n           \"min\":2012,\n           \"max\":2022\n        },\n        {\n          \"id\":\"global_search\",\n          \"type\":\"SEARCH\",\n          \"value\":\"Denem\",\n          \"columns\":[\n             {\n                \"id\":\"first_name\",\n                \"type\":\"string\"\n             },\n             {\n                \"id\":\"last_name\",\n                \"type\":\"string\"\n             },\n             {\n                \"id\":\"id\",\n                \"type\":\"number\"\n             }\n          ]\n       }\n     ]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful paginated response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "anyOf": [
                            {
                              "$ref": "#/components/schemas/LanguageKeywordGroupPaginateDto"
                            },
                            {
                              "$ref": "#/components/schemas/FilterGroupDto"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "List language keyword group paginate",
        "tags": ["Language Keyword Groups"]
      }
    },
    "/api/dashboard/language-keyword-groups/{id}/language/{languageId}": {
      "get": {
        "operationId": "LanguageKeywordGroupController_getById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Language keyword group id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "languageId",
            "required": true,
            "in": "path",
            "description": "Language id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/LanguageKeywordGroupListDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Get language keyword group",
        "tags": ["Language Keyword Groups"]
      }
    },
    "/api/dashboard/language-keyword-groups/{id}": {
      "put": {
        "operationId": "LanguageKeywordGroupController_updateById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Language keyword translation id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LanguageKeywordTranslationUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/LanguageKeywordGroupListDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Update language keyword translation",
        "tags": ["Language Keyword Groups"]
      }
    },
    "/api/dashboard/language-keyword-groups/keyword/{keywordId}/translation": {
      "post": {
        "operationId": "LanguageKeywordGroupController_createTranslation",
        "parameters": [
          {
            "name": "keywordId",
            "required": true,
            "in": "path",
            "description": "Language keyword id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LanguageKeywordTranslationCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/LanguageKeywordGroupListDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Create language keyword translation",
        "tags": ["Language Keyword Groups"]
      }
    },
    "/api/dashboard/language-keyword-groups/translation/{id}": {
      "delete": {
        "operationId": "LanguageKeywordGroupController_deleteTranslation",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Language keyword translation id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/LanguageKeywordGroupListDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Delete language keyword translation",
        "tags": ["Language Keyword Groups"]
      }
    },
    "/api/dashboard/languages": {
      "get": {
        "operationId": "LanguageController_paginate",
        "parameters": [
          {
            "name": "skip",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "example": 1,
              "type": "string"
            }
          },
          {
            "name": "take",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "example": 10,
              "type": "string"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Array string",
            "schema": {
              "example": "yourSelector,asc",
              "type": "string"
            }
          },
          {
            "name": "group",
            "required": false,
            "in": "query",
            "description": "Array object",
            "schema": {
              "example": "[{\"selector\":\"status\",\"search\":\"hello\",filter:[{\n         \"id\":\"last_name\",\n         \"type\":\"SELECT\",\n         \"selecteds\":[\n            \"Kör\"\n         ]\n      }]}]",
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "Array string",
            "schema": {
              "example": "[\n        {\n           \"id\":\"first_name\",\n           \"type\":\"SELECT\",\n           \"selecteds\":[\n              \"KonutKonfor\",\n              \"Feyyaz Can\"\n           ]\n        },\n        {\n           \"id\":\"last_name\",\n           \"type\":\"SELECT\",\n           \"selecteds\":[\n              \"Kör\"\n           ]\n        },\n        {\n           \"id\":\"amount\",\n           \"type\":\"NUMBER\",\n           \"min\":0,\n           \"max\":10000\n        },\n        {\n           \"id\":\"created_at\",\n           \"type\":\"DATE\",\n           \"min\":2012,\n           \"max\":2022\n        },\n        {\n          \"id\":\"global_search\",\n          \"type\":\"SEARCH\",\n          \"value\":\"Denem\",\n          \"columns\":[\n             {\n                \"id\":\"first_name\",\n                \"type\":\"string\"\n             },\n             {\n                \"id\":\"last_name\",\n                \"type\":\"string\"\n             },\n             {\n                \"id\":\"id\",\n                \"type\":\"number\"\n             }\n          ]\n       }\n     ]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful paginated response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "anyOf": [
                            {
                              "$ref": "#/components/schemas/LanguagePaginateDto"
                            },
                            {
                              "$ref": "#/components/schemas/FilterGroupDto"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "List language paginate",
        "tags": ["Language"]
      },
      "post": {
        "operationId": "LanguageController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LanguageCreateOrUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SuccessResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Create language",
        "tags": ["Language"]
      }
    },
    "/api/dashboard/languages/all": {
      "get": {
        "operationId": "LanguageController_getAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/LanguageListDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Get languages",
        "tags": ["Language"]
      }
    },
    "/api/dashboard/languages/{id}": {
      "put": {
        "operationId": "LanguageController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LanguageCreateOrUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SuccessResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Update language",
        "tags": ["Language"]
      },
      "get": {
        "operationId": "LanguageController_getById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/LanguageDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Get language",
        "tags": ["Language"]
      },
      "delete": {
        "operationId": "LanguageController_delete",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SuccessResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Delete language",
        "tags": ["Language"]
      }
    },
    "/api/dashboard/orders": {
      "get": {
        "operationId": "OrderController_paginate",
        "parameters": [
          {
            "name": "skip",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "example": 1,
              "type": "string"
            }
          },
          {
            "name": "take",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "example": 10,
              "type": "string"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Array string",
            "schema": {
              "example": "yourSelector,asc",
              "type": "string"
            }
          },
          {
            "name": "group",
            "required": false,
            "in": "query",
            "description": "Array object",
            "schema": {
              "example": "[{\"selector\":\"status\",\"search\":\"hello\",filter:[{\n         \"id\":\"last_name\",\n         \"type\":\"SELECT\",\n         \"selecteds\":[\n            \"Kör\"\n         ]\n      }]}]",
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "Array string",
            "schema": {
              "example": "[\n        {\n           \"id\":\"first_name\",\n           \"type\":\"SELECT\",\n           \"selecteds\":[\n              \"KonutKonfor\",\n              \"Feyyaz Can\"\n           ]\n        },\n        {\n           \"id\":\"last_name\",\n           \"type\":\"SELECT\",\n           \"selecteds\":[\n              \"Kör\"\n           ]\n        },\n        {\n           \"id\":\"amount\",\n           \"type\":\"NUMBER\",\n           \"min\":0,\n           \"max\":10000\n        },\n        {\n           \"id\":\"created_at\",\n           \"type\":\"DATE\",\n           \"min\":2012,\n           \"max\":2022\n        },\n        {\n          \"id\":\"global_search\",\n          \"type\":\"SEARCH\",\n          \"value\":\"Denem\",\n          \"columns\":[\n             {\n                \"id\":\"first_name\",\n                \"type\":\"string\"\n             },\n             {\n                \"id\":\"last_name\",\n                \"type\":\"string\"\n             },\n             {\n                \"id\":\"id\",\n                \"type\":\"number\"\n             }\n          ]\n       }\n     ]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful paginated response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "anyOf": [
                            {
                              "$ref": "#/components/schemas/OrderPaginateDto"
                            },
                            {
                              "$ref": "#/components/schemas/FilterGroupDto"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "List order paginate",
        "tags": ["Orders"]
      },
      "post": {
        "operationId": "OrderController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SuccessResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Create order",
        "tags": ["Orders"]
      }
    },
    "/api/dashboard/orders/{id}": {
      "get": {
        "operationId": "OrderController_getById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/OrderDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Get order",
        "tags": ["Orders"]
      }
    },
    "/api/dashboard/orders/{id}/status": {
      "patch": {
        "operationId": "OrderController_updateStatus",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderStatusUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SuccessResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Update order status",
        "tags": ["Orders"]
      }
    },
    "/api/dashboard/product-autocomplete-data/import": {
      "post": {
        "operationId": "ProductAutocompleteDataController_importCsv",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SuccessResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Import Product Autocomplete Data from CSV",
        "tags": ["Product Auto Complete Data"]
      }
    },
    "/api/dashboard/product-autocomplete-data/export": {
      "get": {
        "operationId": "ProductAutocompleteDataController_exportCsv",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Export Product Autocomplete Data to CSV",
        "tags": ["Product Auto Complete Data"]
      }
    },
    "/api/dashboard/product-autocomplete-data/coin/{coinCode}": {
      "get": {
        "operationId": "ProductAutocompleteDataController_getCoinByCode",
        "parameters": [
          {
            "name": "coinCode",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Get Product Autocomplete Data by Coin Code",
        "tags": ["Product Auto Complete Data"]
      }
    },
    "/api/dashboard/products": {
      "get": {
        "operationId": "ProductController_paginate",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "language, default en",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skip",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "example": 1,
              "type": "string"
            }
          },
          {
            "name": "take",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "example": 10,
              "type": "string"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Array string",
            "schema": {
              "example": "yourSelector,asc",
              "type": "string"
            }
          },
          {
            "name": "group",
            "required": false,
            "in": "query",
            "description": "Array object",
            "schema": {
              "example": "[{\"selector\":\"status\",\"search\":\"hello\",filter:[{\n         \"id\":\"last_name\",\n         \"type\":\"SELECT\",\n         \"selecteds\":[\n            \"Kör\"\n         ]\n      }]}]",
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "Array string",
            "schema": {
              "example": "[\n        {\n           \"id\":\"first_name\",\n           \"type\":\"SELECT\",\n           \"selecteds\":[\n              \"KonutKonfor\",\n              \"Feyyaz Can\"\n           ]\n        },\n        {\n           \"id\":\"last_name\",\n           \"type\":\"SELECT\",\n           \"selecteds\":[\n              \"Kör\"\n           ]\n        },\n        {\n           \"id\":\"amount\",\n           \"type\":\"NUMBER\",\n           \"min\":0,\n           \"max\":10000\n        },\n        {\n           \"id\":\"created_at\",\n           \"type\":\"DATE\",\n           \"min\":2012,\n           \"max\":2022\n        },\n        {\n          \"id\":\"global_search\",\n          \"type\":\"SEARCH\",\n          \"value\":\"Denem\",\n          \"columns\":[\n             {\n                \"id\":\"first_name\",\n                \"type\":\"string\"\n             },\n             {\n                \"id\":\"last_name\",\n                \"type\":\"string\"\n             },\n             {\n                \"id\":\"id\",\n                \"type\":\"number\"\n             }\n          ]\n       }\n     ]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful paginated response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "anyOf": [
                            {
                              "$ref": "#/components/schemas/ProductPaginateDto"
                            },
                            {
                              "$ref": "#/components/schemas/FilterGroupDto"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "List product paginate",
        "tags": ["Product"]
      },
      "post": {
        "operationId": "ProductController_create",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "language, default en",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SuccessResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Create product",
        "tags": ["Product"]
      }
    },
    "/api/dashboard/products/{id}": {
      "put": {
        "operationId": "ProductController_update",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "language, default en",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SuccessResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Update product",
        "tags": ["Product"]
      },
      "delete": {
        "operationId": "ProductController_delete",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "language, default en",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SuccessResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Delete product",
        "tags": ["Product"]
      },
      "get": {
        "operationId": "ProductController_getById",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "language, default en",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Get product",
        "tags": ["Product"]
      }
    },
    "/api/dashboard/products/all": {
      "get": {
        "operationId": "ProductController_getAll",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "language, default en",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductListDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Get products",
        "tags": ["Product"]
      }
    },
    "/api/dashboard/products/sync-product/{productId}": {
      "get": {
        "operationId": "ProductController_syncProductToEbay",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "language, default en",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Sync product to ebay",
        "tags": ["Product"]
      }
    },
    "/api/dashboard/product-star/{userId}": {
      "get": {
        "operationId": "ProductStarController_paginate",
        "parameters": [
          {
            "name": "skip",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "example": 1,
              "type": "string"
            }
          },
          {
            "name": "take",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "example": 10,
              "type": "string"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Array string",
            "schema": {
              "example": "yourSelector,asc",
              "type": "string"
            }
          },
          {
            "name": "group",
            "required": false,
            "in": "query",
            "description": "Array object",
            "schema": {
              "example": "[{\"selector\":\"status\",\"search\":\"hello\",filter:[{\n         \"id\":\"last_name\",\n         \"type\":\"SELECT\",\n         \"selecteds\":[\n            \"Kör\"\n         ]\n      }]}]",
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "Array string",
            "schema": {
              "example": "[\n        {\n           \"id\":\"first_name\",\n           \"type\":\"SELECT\",\n           \"selecteds\":[\n              \"KonutKonfor\",\n              \"Feyyaz Can\"\n           ]\n        },\n        {\n           \"id\":\"last_name\",\n           \"type\":\"SELECT\",\n           \"selecteds\":[\n              \"Kör\"\n           ]\n        },\n        {\n           \"id\":\"amount\",\n           \"type\":\"NUMBER\",\n           \"min\":0,\n           \"max\":10000\n        },\n        {\n           \"id\":\"created_at\",\n           \"type\":\"DATE\",\n           \"min\":2012,\n           \"max\":2022\n        },\n        {\n          \"id\":\"global_search\",\n          \"type\":\"SEARCH\",\n          \"value\":\"Denem\",\n          \"columns\":[\n             {\n                \"id\":\"first_name\",\n                \"type\":\"string\"\n             },\n             {\n                \"id\":\"last_name\",\n                \"type\":\"string\"\n             },\n             {\n                \"id\":\"id\",\n                \"type\":\"number\"\n             }\n          ]\n       }\n     ]",
              "type": "string"
            }
          },
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful paginated response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "anyOf": [
                            {
                              "$ref": "#/components/schemas/ProductStarPaginateDto"
                            },
                            {
                              "$ref": "#/components/schemas/FilterGroupDto"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "List product stars paginate",
        "tags": ["Product Stars"]
      }
    },
    "/api/dashboard/product-star/{id}": {
      "get": {
        "operationId": "ProductStarController_getById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ProductStarDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Get product star",
        "tags": ["Product Stars"]
      },
      "delete": {
        "operationId": "ProductStarController_delete",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SuccessResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Delete product star",
        "tags": ["Product Stars"]
      }
    },
    "/api/dashboard/profile": {
      "get": {
        "operationId": "ProfileController_getCurrentUser",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UserDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Get current user",
        "tags": ["Profile"]
      }
    },
    "/api/dashboard/roles": {
      "get": {
        "operationId": "RoleController_paginate",
        "parameters": [
          {
            "name": "skip",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "example": 1,
              "type": "string"
            }
          },
          {
            "name": "take",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "example": 10,
              "type": "string"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Array string",
            "schema": {
              "example": "yourSelector,asc",
              "type": "string"
            }
          },
          {
            "name": "group",
            "required": false,
            "in": "query",
            "description": "Array object",
            "schema": {
              "example": "[{\"selector\":\"status\",\"search\":\"hello\",filter:[{\n         \"id\":\"last_name\",\n         \"type\":\"SELECT\",\n         \"selecteds\":[\n            \"Kör\"\n         ]\n      }]}]",
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "Array string",
            "schema": {
              "example": "[\n        {\n           \"id\":\"first_name\",\n           \"type\":\"SELECT\",\n           \"selecteds\":[\n              \"KonutKonfor\",\n              \"Feyyaz Can\"\n           ]\n        },\n        {\n           \"id\":\"last_name\",\n           \"type\":\"SELECT\",\n           \"selecteds\":[\n              \"Kör\"\n           ]\n        },\n        {\n           \"id\":\"amount\",\n           \"type\":\"NUMBER\",\n           \"min\":0,\n           \"max\":10000\n        },\n        {\n           \"id\":\"created_at\",\n           \"type\":\"DATE\",\n           \"min\":2012,\n           \"max\":2022\n        },\n        {\n          \"id\":\"global_search\",\n          \"type\":\"SEARCH\",\n          \"value\":\"Denem\",\n          \"columns\":[\n             {\n                \"id\":\"first_name\",\n                \"type\":\"string\"\n             },\n             {\n                \"id\":\"last_name\",\n                \"type\":\"string\"\n             },\n             {\n                \"id\":\"id\",\n                \"type\":\"number\"\n             }\n          ]\n       }\n     ]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful paginated response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "anyOf": [
                            {
                              "$ref": "#/components/schemas/RolePaginateDto"
                            },
                            {
                              "$ref": "#/components/schemas/FilterGroupDto"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "List role paginate",
        "tags": ["Roles"]
      },
      "post": {
        "operationId": "RoleController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleCreateOrUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SuccessResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Create role",
        "tags": ["Roles"]
      }
    },
    "/api/dashboard/roles/all": {
      "get": {
        "operationId": "RoleController_getAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/RoleListDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Get roles",
        "tags": ["Roles"]
      }
    },
    "/api/dashboard/roles/permissions": {
      "get": {
        "operationId": "RoleController_permissions",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PermissionListDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Get permissions",
        "tags": ["Roles"]
      }
    },
    "/api/dashboard/roles/{id}": {
      "put": {
        "operationId": "RoleController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleCreateOrUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SuccessResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Update role",
        "tags": ["Roles"]
      },
      "get": {
        "operationId": "RoleController_getById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/RoleDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Get role",
        "tags": ["Roles"]
      },
      "delete": {
        "operationId": "RoleController_delete",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SuccessResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Delete role",
        "tags": ["Roles"]
      }
    },
    "/api/dashboard/settings": {
      "get": {
        "operationId": "SettingController_getById",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SettingDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Get Setting",
        "tags": ["Setting"]
      },
      "put": {
        "operationId": "SettingController_update",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SettingCreateOrUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SuccessResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Update Setting",
        "tags": ["Setting"]
      }
    },
    "/api/dashboard/settings/mail": {
      "get": {
        "operationId": "SettingController_getMailSetting",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MailSettingDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Get Mail",
        "tags": ["Setting"]
      },
      "put": {
        "operationId": "SettingController_updateMailSetting",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MailSettingCreateOrUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SuccessResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Update Mail",
        "tags": ["Setting"]
      }
    },
    "/api/dashboard/settings/mailchimp": {
      "get": {
        "operationId": "SettingController_getMailChimpSetting",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/MailChimpSettingDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Get Mailchimp",
        "tags": ["Setting"]
      },
      "put": {
        "operationId": "SettingController_updateMailChimpSetting",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MailChimpSettingCreateOrUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SuccessResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Update Mailchimp",
        "tags": ["Setting"]
      }
    },
    "/api/dashboard/settings/ebay": {
      "get": {
        "operationId": "SettingController_getEbaySetting",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/EbaySettingDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Get Ebay",
        "tags": ["Setting"]
      },
      "put": {
        "operationId": "SettingController_updateEbaySetting",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EbaySettingCreateOrUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SuccessResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Update Ebay",
        "tags": ["Setting"]
      }
    },
    "/api/dashboard/settings/ebay/login": {
      "get": {
        "operationId": "SettingController_redirectToEbayLogin",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/EbayLoginDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Redirect to ebay login",
        "tags": ["Setting"]
      }
    },
    "/api/dashboard/settings/payment": {
      "get": {
        "operationId": "SettingController_getPaymentSetting",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PaymentSettingDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Get Payment",
        "tags": ["Setting"]
      },
      "put": {
        "operationId": "SettingController_updatePaymentSetting",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentSettingCreateOrUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SuccessResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Update Payment",
        "tags": ["Setting"]
      }
    },
    "/api/dashboard/settings/shipping": {
      "get": {
        "operationId": "SettingController_getShippingSetting",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ShippingSettingDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Get Shipping",
        "tags": ["Setting"]
      },
      "put": {
        "operationId": "SettingController_updateShippingSetting",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShippingSettingCreateOrUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SuccessResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Update Shipping",
        "tags": ["Setting"]
      }
    },
    "/api/dashboard/translation/translate": {
      "post": {
        "operationId": "TranslationController_translateData",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TranslateRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/TranslateResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input data (e.g., invalid language code)."
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Translate JSON data object",
        "tags": ["Translation"]
      }
    },
    "/api/dashboard/users": {
      "get": {
        "operationId": "UserController_paginate",
        "parameters": [
          {
            "name": "skip",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "example": 1,
              "type": "string"
            }
          },
          {
            "name": "take",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "example": 10,
              "type": "string"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Array string",
            "schema": {
              "example": "yourSelector,asc",
              "type": "string"
            }
          },
          {
            "name": "group",
            "required": false,
            "in": "query",
            "description": "Array object",
            "schema": {
              "example": "[{\"selector\":\"status\",\"search\":\"hello\",filter:[{\n         \"id\":\"last_name\",\n         \"type\":\"SELECT\",\n         \"selecteds\":[\n            \"Kör\"\n         ]\n      }]}]",
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "Array string",
            "schema": {
              "example": "[\n        {\n           \"id\":\"first_name\",\n           \"type\":\"SELECT\",\n           \"selecteds\":[\n              \"KonutKonfor\",\n              \"Feyyaz Can\"\n           ]\n        },\n        {\n           \"id\":\"last_name\",\n           \"type\":\"SELECT\",\n           \"selecteds\":[\n              \"Kör\"\n           ]\n        },\n        {\n           \"id\":\"amount\",\n           \"type\":\"NUMBER\",\n           \"min\":0,\n           \"max\":10000\n        },\n        {\n           \"id\":\"created_at\",\n           \"type\":\"DATE\",\n           \"min\":2012,\n           \"max\":2022\n        },\n        {\n          \"id\":\"global_search\",\n          \"type\":\"SEARCH\",\n          \"value\":\"Denem\",\n          \"columns\":[\n             {\n                \"id\":\"first_name\",\n                \"type\":\"string\"\n             },\n             {\n                \"id\":\"last_name\",\n                \"type\":\"string\"\n             },\n             {\n                \"id\":\"id\",\n                \"type\":\"number\"\n             }\n          ]\n       }\n     ]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful paginated response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "anyOf": [
                            {
                              "$ref": "#/components/schemas/UserPaginateDto"
                            },
                            {
                              "$ref": "#/components/schemas/FilterGroupDto"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "List user paginate",
        "tags": ["User"]
      },
      "post": {
        "operationId": "UserController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateOrUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SuccessResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Create user",
        "tags": ["User"]
      }
    },
    "/api/dashboard/users/{id}": {
      "put": {
        "operationId": "UserController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateOrUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SuccessResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Update user",
        "tags": ["User"]
      },
      "get": {
        "operationId": "UserController_getById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UserDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Get user",
        "tags": ["User"]
      },
      "delete": {
        "operationId": "UserController_delete",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SuccessResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Delete user",
        "tags": ["User"]
      }
    },
    "/api/dashboard/users/{id}/role": {
      "get": {
        "operationId": "UserController_getByUserRoleId",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UserRoleListDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Get user roles",
        "tags": ["User"]
      },
      "put": {
        "operationId": "UserController_updateUserRole",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRoleUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SuccessResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Update user roles",
        "tags": ["User"]
      }
    },
    "/api/dashboard/users/all": {
      "get": {
        "operationId": "UserController_getAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UserListDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Get users",
        "tags": ["User"]
      }
    },
    "/api/dashboard/xero-setting": {
      "get": {
        "operationId": "XeroSettingController_getSettings",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful paginated response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "anyOf": [
                            {
                              "$ref": "#/components/schemas/XeroIntegrationDto"
                            },
                            {
                              "$ref": "#/components/schemas/FilterGroupDto"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Get xero setting",
        "tags": ["Xero Setting"]
      },
      "put": {
        "operationId": "XeroSettingController_updateSettings",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/XeroIntegrationUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful paginated response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "anyOf": [
                            {
                              "$ref": "#/components/schemas/SuccessResponseDto"
                            },
                            {
                              "$ref": "#/components/schemas/FilterGroupDto"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Update xero setting",
        "tags": ["Xero Setting"]
      }
    },
    "/api/dashboard/xero-setting/connect-url": {
      "get": {
        "operationId": "XeroSettingController_getConnectUrl",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful paginated response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "anyOf": [
                            {
                              "$ref": "#/components/schemas/XeroConnectUrlDto"
                            },
                            {
                              "$ref": "#/components/schemas/FilterGroupDto"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Get xero connect url",
        "tags": ["Xero Setting"]
      }
    },
    "/api/dashboard/xero-setting/tenants": {
      "get": {
        "operationId": "XeroSettingController_getTenants",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful paginated response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "anyOf": [
                            {
                              "$ref": "#/components/schemas/XeroTenantListDto"
                            },
                            {
                              "$ref": "#/components/schemas/FilterGroupDto"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Get all xero tenants",
        "tags": ["Xero Setting"]
      }
    },
    "/api/dashboard/products/{productId}/similar-products": {
      "get": {
        "operationId": "SimilarProductController_getSimilarProducts",
        "parameters": [
          {
            "name": "productId",
            "required": true,
            "in": "path",
            "description": "ID of the product",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful paginated response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "anyOf": [
                            {
                              "$ref": "#/components/schemas/SimilarProductItemResponseDto"
                            },
                            {
                              "$ref": "#/components/schemas/FilterGroupDto"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Product not found"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Get all similar products for a product",
        "tags": ["Similar Products"]
      },
      "post": {
        "operationId": "SimilarProductController_addSimilarProduct",
        "parameters": [
          {
            "name": "productId",
            "required": true,
            "in": "path",
            "description": "ID of the product",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSimilarProductDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Add a similar product to a product",
        "tags": ["Similar Products"]
      }
    },
    "/api/dashboard/products/{productId}/similar-products/{similarId}": {
      "delete": {
        "operationId": "SimilarProductController_removeSimilarProduct",
        "parameters": [
          {
            "name": "productId",
            "required": true,
            "in": "path",
            "description": "ID of the product",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "similarId",
            "required": true,
            "in": "path",
            "description": "ID of the similar product",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Remove a similar product from a product",
        "tags": ["Similar Products"]
      }
    },
    "/api/dashboard/page/paginate": {
      "get": {
        "operationId": "PageController_paginate",
        "parameters": [
          {
            "name": "skip",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "example": 1,
              "type": "string"
            }
          },
          {
            "name": "take",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "example": 10,
              "type": "string"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Array string",
            "schema": {
              "example": "yourSelector,asc",
              "type": "string"
            }
          },
          {
            "name": "group",
            "required": false,
            "in": "query",
            "description": "Array object",
            "schema": {
              "example": "[{\"selector\":\"status\",\"search\":\"hello\",filter:[{\n         \"id\":\"last_name\",\n         \"type\":\"SELECT\",\n         \"selecteds\":[\n            \"Kör\"\n         ]\n      }]}]",
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "Array string",
            "schema": {
              "example": "[\n        {\n           \"id\":\"first_name\",\n           \"type\":\"SELECT\",\n           \"selecteds\":[\n              \"KonutKonfor\",\n              \"Feyyaz Can\"\n           ]\n        },\n        {\n           \"id\":\"last_name\",\n           \"type\":\"SELECT\",\n           \"selecteds\":[\n              \"Kör\"\n           ]\n        },\n        {\n           \"id\":\"amount\",\n           \"type\":\"NUMBER\",\n           \"min\":0,\n           \"max\":10000\n        },\n        {\n           \"id\":\"created_at\",\n           \"type\":\"DATE\",\n           \"min\":2012,\n           \"max\":2022\n        },\n        {\n          \"id\":\"global_search\",\n          \"type\":\"SEARCH\",\n          \"value\":\"Denem\",\n          \"columns\":[\n             {\n                \"id\":\"first_name\",\n                \"type\":\"string\"\n             },\n             {\n                \"id\":\"last_name\",\n                \"type\":\"string\"\n             },\n             {\n                \"id\":\"id\",\n                \"type\":\"number\"\n             }\n          ]\n       }\n     ]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful paginated response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "anyOf": [
                            {
                              "$ref": "#/components/schemas/PagePaginateDto"
                            },
                            {
                              "$ref": "#/components/schemas/FilterGroupDto"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "List page paginate",
        "tags": ["Theme Page"]
      }
    },
    "/api/dashboard/page": {
      "post": {
        "operationId": "PageController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PageCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SuccessResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Create page",
        "tags": ["Theme Page"]
      }
    },
    "/api/dashboard/page/all": {
      "get": {
        "operationId": "PageController_getAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PageListDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Get all page",
        "tags": ["Theme Page"]
      }
    },
    "/api/dashboard/page/{id}": {
      "patch": {
        "operationId": "PageController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PageUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SuccessResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Update page",
        "tags": ["Theme Page"]
      },
      "get": {
        "operationId": "PageController_getById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PageDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Get page",
        "tags": ["Theme Page"]
      },
      "delete": {
        "operationId": "PageController_delete",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SuccessResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Delete page",
        "tags": ["Theme Page"]
      }
    },
    "/api/dashboard/site-config/all": {
      "get": {
        "operationId": "SiteConfigController_getAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SiteConfigListDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Get all site config",
        "tags": ["Theme Site Config"]
      }
    },
    "/api/dashboard/site-config/{id}": {
      "put": {
        "operationId": "SiteConfigController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SiteConfigCreateOrUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SuccessResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Update site config",
        "tags": ["Theme Site Config"]
      },
      "get": {
        "operationId": "SiteConfigController_getById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SiteConfigDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Get site config",
        "tags": ["Theme Site Config"]
      },
      "delete": {
        "operationId": "SiteConfigController_delete",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SuccessResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Delete site config",
        "tags": ["Theme Site Config"]
      }
    },
    "/api/dashboard/contents/{type}": {
      "get": {
        "operationId": "ContentController_paginate",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "language, default en",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "required": true,
            "in": "path",
            "description": "Type of the content, enum: [\"blog\", \"faq\", \"news\"]",
            "schema": {
              "enum": ["blog", "news", "faq"],
              "type": "string"
            }
          },
          {
            "name": "skip",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "example": 1,
              "type": "string"
            }
          },
          {
            "name": "take",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "example": 10,
              "type": "string"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Array string",
            "schema": {
              "example": "yourSelector,asc",
              "type": "string"
            }
          },
          {
            "name": "group",
            "required": false,
            "in": "query",
            "description": "Array object",
            "schema": {
              "example": "[{\"selector\":\"status\",\"search\":\"hello\",filter:[{\n         \"id\":\"last_name\",\n         \"type\":\"SELECT\",\n         \"selecteds\":[\n            \"Kör\"\n         ]\n      }]}]",
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "Array string",
            "schema": {
              "example": "[\n        {\n           \"id\":\"first_name\",\n           \"type\":\"SELECT\",\n           \"selecteds\":[\n              \"KonutKonfor\",\n              \"Feyyaz Can\"\n           ]\n        },\n        {\n           \"id\":\"last_name\",\n           \"type\":\"SELECT\",\n           \"selecteds\":[\n              \"Kör\"\n           ]\n        },\n        {\n           \"id\":\"amount\",\n           \"type\":\"NUMBER\",\n           \"min\":0,\n           \"max\":10000\n        },\n        {\n           \"id\":\"created_at\",\n           \"type\":\"DATE\",\n           \"min\":2012,\n           \"max\":2022\n        },\n        {\n          \"id\":\"global_search\",\n          \"type\":\"SEARCH\",\n          \"value\":\"Denem\",\n          \"columns\":[\n             {\n                \"id\":\"first_name\",\n                \"type\":\"string\"\n             },\n             {\n                \"id\":\"last_name\",\n                \"type\":\"string\"\n             },\n             {\n                \"id\":\"id\",\n                \"type\":\"number\"\n             }\n          ]\n       }\n     ]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful paginated response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "anyOf": [
                            {
                              "$ref": "#/components/schemas/ContentPaginateDto"
                            },
                            {
                              "$ref": "#/components/schemas/FilterGroupDto"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "List content paginate",
        "tags": ["Content"]
      },
      "post": {
        "operationId": "ContentController_create",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "language, default en",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "required": true,
            "in": "path",
            "description": "Type of the content, enum: [\"blog\", \"faq\", \"news\"]",
            "schema": {
              "enum": ["blog", "news", "faq"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SuccessResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Create content",
        "tags": ["Content"]
      },
      "patch": {
        "operationId": "ContentController_updateSort",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "language, default en",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "required": true,
            "in": "path",
            "description": "Type of the content, enum: [\"blog\", \"faq\", \"news\"]",
            "schema": {
              "enum": ["blog", "news", "faq"],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentSortUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SuccessResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Update sort",
        "tags": ["Content"]
      }
    },
    "/api/dashboard/contents/{type}/{id}": {
      "put": {
        "operationId": "ContentController_update",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "language, default en",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "required": true,
            "in": "path",
            "description": "Type of the content, enum: [\"blog\", \"faq\", \"news\"]",
            "schema": {
              "enum": ["blog", "news", "faq"],
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SuccessResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Update content",
        "tags": ["Content"]
      },
      "delete": {
        "operationId": "ContentController_delete",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "language, default en",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "required": true,
            "in": "path",
            "description": "Type of the content, enum: [\"blog\", \"faq\", \"news\"]",
            "schema": {
              "enum": ["blog", "news", "faq"],
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SuccessResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Delete content",
        "tags": ["Content"]
      },
      "get": {
        "operationId": "ContentController_getById",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "language, default en",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "required": true,
            "in": "path",
            "description": "Type of the content, enum: [\"blog\", \"faq\", \"news\"]",
            "schema": {
              "enum": ["blog", "news", "faq"],
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ContentDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Get content",
        "tags": ["Content"]
      }
    },
    "/api/dashboard/contents/{type}/all": {
      "get": {
        "operationId": "ContentController_getAll",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "language, default en",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "required": true,
            "in": "path",
            "description": "Type of the content, enum: [\"blog\", \"faq\", \"news\"]",
            "schema": {
              "enum": ["blog", "news", "faq"],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ContentListDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Get contents",
        "tags": ["Content"]
      }
    },
    "/api/dashboard/contents/{type}/content-find-title": {
      "get": {
        "operationId": "ContentController_findTitle",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "language, default en",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "required": true,
            "in": "path",
            "description": "Type of the content, enum: [\"blog\", \"faq\", \"news\"]",
            "schema": {
              "enum": ["blog", "news", "faq"],
              "type": "string"
            }
          },
          {
            "name": "title",
            "required": true,
            "in": "query",
            "description": "Title of the content to search for",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ContentBaseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Find content title",
        "tags": ["Content"]
      }
    },
    "/api/dashboard/contents/{type}/slug/{slug}": {
      "get": {
        "operationId": "ContentController_getBySlug",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "description": "language, default en",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "required": true,
            "in": "path",
            "description": "Type of the content, enum: [\"blog\", \"faq\", \"news\"]",
            "schema": {
              "enum": ["blog", "news", "faq"],
              "type": "string"
            }
          },
          {
            "name": "slug",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ContentDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Get content by slug",
        "tags": ["Content"]
      }
    },
    "/api/dashboard/form": {
      "get": {
        "operationId": "PageFormAnswerController_paginate",
        "parameters": [
          {
            "name": "skip",
            "required": false,
            "in": "query",
            "schema": {
              "default": 1,
              "example": 1,
              "type": "string"
            }
          },
          {
            "name": "take",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "example": 10,
              "type": "string"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Array string",
            "schema": {
              "example": "yourSelector,asc",
              "type": "string"
            }
          },
          {
            "name": "group",
            "required": false,
            "in": "query",
            "description": "Array object",
            "schema": {
              "example": "[{\"selector\":\"status\",\"search\":\"hello\",filter:[{\n         \"id\":\"last_name\",\n         \"type\":\"SELECT\",\n         \"selecteds\":[\n            \"Kör\"\n         ]\n      }]}]",
              "type": "string"
            }
          },
          {
            "name": "filter",
            "required": false,
            "in": "query",
            "description": "Array string",
            "schema": {
              "example": "[\n        {\n           \"id\":\"first_name\",\n           \"type\":\"SELECT\",\n           \"selecteds\":[\n              \"KonutKonfor\",\n              \"Feyyaz Can\"\n           ]\n        },\n        {\n           \"id\":\"last_name\",\n           \"type\":\"SELECT\",\n           \"selecteds\":[\n              \"Kör\"\n           ]\n        },\n        {\n           \"id\":\"amount\",\n           \"type\":\"NUMBER\",\n           \"min\":0,\n           \"max\":10000\n        },\n        {\n           \"id\":\"created_at\",\n           \"type\":\"DATE\",\n           \"min\":2012,\n           \"max\":2022\n        },\n        {\n          \"id\":\"global_search\",\n          \"type\":\"SEARCH\",\n          \"value\":\"Denem\",\n          \"columns\":[\n             {\n                \"id\":\"first_name\",\n                \"type\":\"string\"\n             },\n             {\n                \"id\":\"last_name\",\n                \"type\":\"string\"\n             },\n             {\n                \"id\":\"id\",\n                \"type\":\"number\"\n             }\n          ]\n       }\n     ]",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful paginated response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "anyOf": [
                            {
                              "$ref": "#/components/schemas/PageFormAnswerPaginateDto"
                            },
                            {
                              "$ref": "#/components/schemas/FilterGroupDto"
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "List form paginate",
        "tags": ["Form"]
      }
    },
    "/api/dashboard/form/{id}": {
      "get": {
        "operationId": "PageFormAnswerController_getById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PageFormAnswerDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Get form",
        "tags": ["Form"]
      },
      "delete": {
        "operationId": "PageFormAnswerController_delete",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceResultWithDataDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/SuccessResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "jwtAdminAuth": []
          }
        ],
        "summary": "Delete form",
        "tags": ["Form"]
      }
    }
  },
  "info": {
    "title": "Dashboard | DrakeSterling Staging Api Doc",
    "description": "<h2 style=\"margin-top:10px\"><a href=\"#dashboard-service\">About Dashboard</a></h2> A comprehensive backoffice module that facilitates the tracking of business processes for managers and employees. This module enables the management of operational processes such as user management, workflows, and performance tracking, as well as reporting and analytics. Especially in service-based and e-commerce focused projects, this module includes critical functions such as supplier tracking, order management, quotations, and product creation. "
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "jwtAdminAuth": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http",
        "name": "JWT",
        "description": "Enter Admin JWT token",
        "in": "header"
      },
      "jwtUserAuth": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http",
        "name": "JWT",
        "description": "Enter User JWT token",
        "in": "header"
      },
      "x-api-key": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key",
        "description": "Combined access_key and secret_key"
      },
      "guest-uuid": {
        "type": "apiKey",
        "in": "header",
        "name": "guest-uuid",
        "description": "Guest uuid"
      },
      "none": {
        "type": "http",
        "scheme": "none"
      }
    },
    "schemas": {
      "ServiceResultWithDataDto": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true,
            "description": "Operation success status"
          },
          "message": {
            "type": "string",
            "example": "Operation completed successfully",
            "description": "Operation message"
          },
          "code": {
            "type": "number",
            "example": 200,
            "description": "HTTP response status code"
          },
          "errors": {
            "example": ["Validation failed"],
            "description": "List of error messages",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "data": {
            "type": "object",
            "description": "Response data",
            "example": {}
          }
        },
        "required": ["success", "message", "code"]
      },
      "CountryDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "name": {
            "type": "string",
            "example": "Turkey"
          },
          "iso_code_2": {
            "type": "string",
            "example": "TR"
          },
          "iso_code_3": {
            "type": "string",
            "example": "TUR"
          },
          "phone_code": {
            "type": "string",
            "example": "+90"
          },
          "postal_code_format": {
            "type": "string",
            "example": "TR"
          },
          "postal_code_regex": {
            "type": "string",
            "example": "^[0-9]{5}$"
          },
          "is_active": {
            "type": "boolean",
            "example": "true"
          },
          "region_id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "capital_id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "time_zone_id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "created_at": {
            "format": "date-time",
            "type": "string",
            "example": "2025-05-22T19:27:25.000Z"
          }
        },
        "required": [
          "id",
          "name",
          "iso_code_2",
          "iso_code_3",
          "phone_code",
          "postal_code_format",
          "postal_code_regex",
          "is_active",
          "region_id",
          "capital_id",
          "time_zone_id",
          "created_at"
        ]
      },
      "CityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "name": {
            "type": "string",
            "example": "Turkey"
          },
          "latitude": {
            "type": "number",
            "example": "TR"
          },
          "longitude": {
            "type": "number",
            "example": "TUR"
          },
          "population": {
            "type": "number",
            "example": "TUR"
          },
          "time_zone_id": {
            "type": "string",
            "example": "TR"
          },
          "country_id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "created_at": {
            "format": "date-time",
            "type": "string",
            "example": "2025-05-22T19:27:25.000Z"
          }
        },
        "required": [
          "id",
          "name",
          "latitude",
          "longitude",
          "population",
          "time_zone_id",
          "country_id",
          "created_at"
        ]
      },
      "AddressDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "user_id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "first_name": {
            "type": "string",
            "example": "John"
          },
          "last_name": {
            "type": "string",
            "example": "Doe"
          },
          "company_name": {
            "type": "string",
            "example": "Company Name"
          },
          "phone": {
            "type": "string",
            "example": "905555555555"
          },
          "phone_code": {
            "type": "string",
            "example": "+90"
          },
          "address_line": {
            "type": "string",
            "example": "123 Main St"
          },
          "address_line2": {
            "type": "string",
            "example": "Apt 1"
          },
          "address_line3": {
            "type": "string",
            "example": "123 Main St"
          },
          "post_code": {
            "type": "string",
            "example": "12345"
          },
          "state_province": {
            "type": "string",
            "example": "Apt 1"
          },
          "town": {
            "type": "string",
            "example": "Apt 1"
          },
          "country_id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "city_id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "is_default": {
            "type": "boolean",
            "example": true
          },
          "country": {
            "$ref": "#/components/schemas/CountryDto"
          },
          "city": {
            "$ref": "#/components/schemas/CityDto"
          },
          "created_at": {
            "format": "date-time",
            "type": "string",
            "example": "2025-05-22T19:27:25.000Z"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string",
            "example": "2025-05-22T19:27:25.000Z"
          }
        },
        "required": [
          "id",
          "user_id",
          "first_name",
          "last_name",
          "company_name",
          "phone",
          "phone_code",
          "address_line",
          "address_line2",
          "address_line3",
          "post_code",
          "state_province",
          "town",
          "country_id",
          "city_id",
          "is_default",
          "country",
          "city",
          "created_at",
          "updated_at"
        ]
      },
      "FilterMetaDto": {
        "type": "object",
        "properties": {
          "totalItems": {
            "type": "number",
            "example": 200,
            "description": "Listede toplamda çekilebilecek kaç tane kayıt olduğu bilgisidir."
          },
          "itemCount": {
            "type": "number",
            "example": 10,
            "description": "Listenin ilgili sayfasında kaç tane kayıt olduğu bilgisidir."
          },
          "itemsPerPage": {
            "type": "number",
            "example": 10,
            "description": "Listedeki her bir sayfada kaç tane kayıt olduğu bilgisidir."
          },
          "totalPages": {
            "type": "number",
            "example": 10,
            "description": "Listede çekilebilecek kaç tane sayfa olduğu bilgisidir."
          },
          "currentPage": {
            "type": "number",
            "example": 10,
            "description": "Listede kaçıncı sayfada olunduğu bilgisidir."
          }
        },
        "required": [
          "totalItems",
          "itemCount",
          "itemsPerPage",
          "totalPages",
          "currentPage"
        ]
      },
      "AddressPaginateDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddressDto"
            }
          },
          "meta": {
            "example": {
              "totalItems": 1,
              "itemCount": 1,
              "itemsPerPage": 10,
              "totalPages": 1,
              "currentPage": 1
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterMetaDto"
              }
            ]
          },
          "links": {
            "type": "object",
            "example": {
              "first": "string",
              "previous": "string",
              "next": "string",
              "last": "string"
            }
          }
        },
        "required": ["items", "meta", "links"]
      },
      "FilterGroupItemDto": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "example": "Konutkonfor"
          }
        },
        "required": ["key"]
      },
      "FilterGroupDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterGroupItemDto"
            }
          },
          "totalCount": {
            "type": "number",
            "example": 100
          }
        },
        "required": ["data", "totalCount"]
      },
      "SuccessResponseDto": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number",
            "description": "success code",
            "default": 200
          },
          "message": {
            "type": "string",
            "description": "message",
            "default": "200"
          },
          "entity_id": {
            "type": "number",
            "description": "entity_id",
            "default": null,
            "example": 1
          }
        }
      },
      "AddressCreateOrUpdateDto": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "first_name": {
            "type": "string",
            "example": "John"
          },
          "last_name": {
            "type": "string",
            "example": "Doe"
          },
          "company_name": {
            "type": "string",
            "example": "Company Name"
          },
          "phone": {
            "type": "string",
            "example": "905555555555"
          },
          "phone_code": {
            "type": "string",
            "example": "+90"
          },
          "address_line": {
            "type": "string",
            "example": "123 Main St"
          },
          "address_line2": {
            "type": "string",
            "example": "Apt 1"
          },
          "state_province": {
            "type": "string",
            "example": "Apt 1"
          },
          "town": {
            "type": "string",
            "example": "Apt 1"
          },
          "address_line3": {
            "type": "string",
            "example": "123 Main St"
          },
          "post_code": {
            "type": "string",
            "example": "12345"
          },
          "country_id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "city_id": {
            "type": "string",
            "example": "svm2yb3aeq"
          }
        },
        "required": [
          "user_id",
          "first_name",
          "last_name",
          "company_name",
          "phone",
          "phone_code",
          "address_line",
          "address_line2",
          "state_province",
          "town",
          "address_line3",
          "post_code",
          "country_id",
          "city_id"
        ]
      },
      "AddressListDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddressDto"
            }
          }
        },
        "required": ["items"]
      },
      "UserDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "user_code": {
            "type": "string",
            "example": "54323"
          },
          "first_name": {
            "type": "string",
            "example": "feyyaz"
          },
          "last_name": {
            "type": "string",
            "example": "Admin"
          },
          "type": {
            "type": "string",
            "enum": ["ADMIN", "CUSTOMER"],
            "example": "ADMIN"
          },
          "language_id": {
            "type": "string",
            "example": "feyyaz"
          },
          "email": {
            "type": "string",
            "example": "dev@feyyaz.com.tr"
          },
          "phone": {
            "type": "string",
            "example": "905429322605"
          },
          "phone_code": {
            "type": "string",
            "example": "+90"
          },
          "last_signed_in": {
            "format": "date-time",
            "type": "string",
            "example": "2023-01-01T12:00:00Z",
            "description": "Last signed in date"
          },
          "is_subscribe_email": {
            "type": "boolean",
            "example": true,
            "description": "Is subscribe email"
          },
          "has_items_in_cart": {
            "type": "boolean",
            "example": true,
            "description": "Has items in cart"
          },
          "cart_item_count": {
            "type": "number",
            "example": 2,
            "description": "Number of items in cart"
          },
          "company_name": {
            "type": "string",
            "example": null,
            "default": null
          },
          "is_view_price": {
            "type": "boolean",
            "example": true,
            "default": true
          },
          "is_approved_for_credit_card": {
            "type": "boolean",
            "example": true,
            "default": false
          },
          "is_approved_for_mailing": {
            "type": "boolean",
            "example": true,
            "default": false
          },
          "is_locked_account": {
            "type": "boolean",
            "example": true,
            "default": false
          }
        },
        "required": [
          "id",
          "user_code",
          "first_name",
          "last_name",
          "type",
          "language_id",
          "email",
          "phone",
          "phone_code",
          "cart_item_count"
        ]
      },
      "AuthResponseDto": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJz..."
          },
          "user": {
            "$ref": "#/components/schemas/UserDto"
          }
        },
        "required": ["accessToken", "user"]
      },
      "AuthDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "dev@uplide.com"
          },
          "password": {
            "type": "string",
            "example": "123456"
          }
        },
        "required": ["email", "password"]
      },
      "AverageDiscountDto": {
        "type": "object",
        "properties": {
          "totalRetailPrice": {
            "type": "number",
            "description": "Total retail price before discounts",
            "example": 15000.5
          },
          "totalSalesPrice": {
            "type": "number",
            "description": "Total actual sales price after discounts",
            "example": 12500.75
          },
          "totalDiscountAmount": {
            "type": "number",
            "description": "Total discount amount (totalRetailPrice - totalSalesPrice)",
            "example": 2499.75
          },
          "averageDiscountPercentage": {
            "type": "number",
            "description": "Average discount percentage",
            "example": 16.67
          },
          "ordersWithDiscount": {
            "type": "number",
            "description": "Total number of orders with discounts",
            "example": 18
          },
          "totalOrders": {
            "type": "number",
            "description": "Total number of orders",
            "example": 25
          },
          "startDate": {
            "type": "string",
            "description": "Start date of the report period",
            "example": "2023-01-01"
          },
          "endDate": {
            "type": "string",
            "description": "End date of the report period",
            "example": "2023-01-31"
          }
        },
        "required": [
          "totalRetailPrice",
          "totalSalesPrice",
          "totalDiscountAmount",
          "averageDiscountPercentage",
          "ordersWithDiscount",
          "totalOrders",
          "startDate",
          "endDate"
        ]
      },
      "AverageDaysOnMarketDto": {
        "type": "object",
        "properties": {
          "totalProductsSold": {
            "type": "number",
            "description": "Total number of products sold in the date range",
            "example": 25
          },
          "averageDaysOnMarket": {
            "type": "number",
            "description": "Average number of days products were on market before being sold",
            "example": 15.4
          },
          "medianDaysOnMarket": {
            "type": "number",
            "description": "Median number of days products were on market before being sold",
            "example": 12
          },
          "minDaysOnMarket": {
            "type": "number",
            "description": "Minimum number of days a product was on market before being sold",
            "example": 1
          },
          "maxDaysOnMarket": {
            "type": "number",
            "description": "Maximum number of days a product was on market before being sold",
            "example": 60
          },
          "startDate": {
            "type": "string",
            "description": "Start date of the report period",
            "example": "2023-01-01"
          },
          "endDate": {
            "type": "string",
            "description": "End date of the report period",
            "example": "2023-01-31"
          }
        },
        "required": [
          "totalProductsSold",
          "averageDaysOnMarket",
          "medianDaysOnMarket",
          "minDaysOnMarket",
          "maxDaysOnMarket",
          "startDate",
          "endDate"
        ]
      },
      "AverageOrderValueDto": {
        "type": "object",
        "properties": {
          "totalSales": {
            "type": "number",
            "description": "Total sum of all sales within the date range",
            "example": 12500.75
          },
          "totalOrders": {
            "type": "number",
            "description": "Total number of orders within the date range",
            "example": 25
          },
          "averageOrderValue": {
            "type": "number",
            "description": "Average order value (totalSales / totalOrders)",
            "example": 500.03
          },
          "startDate": {
            "type": "string",
            "description": "Start date of the report period",
            "example": "2023-01-01"
          },
          "endDate": {
            "type": "string",
            "description": "End date of the report period",
            "example": "2023-01-31"
          }
        },
        "required": [
          "totalSales",
          "totalOrders",
          "averageOrderValue",
          "startDate",
          "endDate"
        ]
      },
      "CurrencyDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "code": {
            "type": "string",
            "example": "TRY"
          },
          "symbol": {
            "type": "string",
            "example": "₺"
          },
          "bank_rate": {
            "type": "number",
            "example": 34.5
          },
          "system_rate": {
            "type": "number",
            "example": 34.5
          }
        },
        "required": ["id", "code", "symbol", "bank_rate", "system_rate"]
      },
      "BankTransferDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "bank_name": {
            "type": "string",
            "example": "Commonwealth Bank of Australia"
          },
          "bank_address": {
            "type": "string",
            "example": "254 George Street 2000 Australia"
          },
          "account_name": {
            "type": "string",
            "example": "Drake Sterling Numismatics Pty Ltd"
          },
          "account_no": {
            "type": "string",
            "example": "10226941"
          },
          "bsb_code": {
            "type": "string",
            "example": "062070"
          },
          "swift_code": {
            "type": "string",
            "example": "CTBAAU2S"
          },
          "currency": {
            "$ref": "#/components/schemas/CurrencyDto"
          }
        },
        "required": [
          "id",
          "bank_name",
          "bank_address",
          "account_name",
          "account_no",
          "bsb_code",
          "swift_code",
          "currency"
        ]
      },
      "BankTransferPaginateDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BankTransferDto"
            }
          },
          "meta": {
            "example": {
              "totalItems": 1,
              "itemCount": 1,
              "itemsPerPage": 10,
              "totalPages": 1,
              "currentPage": 1
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterMetaDto"
              }
            ]
          },
          "links": {
            "type": "object",
            "example": {
              "first": "string",
              "previous": "string",
              "next": "string",
              "last": "string"
            }
          }
        },
        "required": ["items", "meta", "links"]
      },
      "BankTransferListDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BankTransferDto"
            }
          }
        },
        "required": ["items"]
      },
      "BankTransferCreateOrUpdateDto": {
        "type": "object",
        "properties": {
          "currency_id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "bank_name": {
            "type": "string",
            "example": "Commonwealth Bank of Australia"
          },
          "bank_address": {
            "type": "string",
            "example": "254 George Street 2000 Australia"
          },
          "account_name": {
            "type": "string",
            "example": "Drake Sterling Numismatics Pty Ltd"
          },
          "account_no": {
            "type": "string",
            "example": "10226941"
          },
          "bsb_code": {
            "type": "string",
            "example": "062070"
          },
          "swift_code": {
            "type": "string",
            "example": "CTBAAU2S"
          }
        },
        "required": [
          "currency_id",
          "bank_name",
          "bank_address",
          "account_name",
          "account_no",
          "bsb_code",
          "swift_code"
        ]
      },
      "ProductBaseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "product_identity": {
            "type": "string",
            "example": "AUS-1930-PENNY"
          },
          "product_sku": {
            "type": "string",
            "example": "AUS-1930-PENNY"
          },
          "coin_video": {
            "type": "string",
            "example": "AUS-1930-PENNY"
          },
          "is_coin_video": {
            "type": "boolean",
            "example": true
          },
          "product_web_sku": {
            "type": "string",
            "example": "AUS-1930-PENNY"
          },
          "cert_number": {
            "type": "string",
            "example": "AUS-1930-PENNY"
          },
          "coin_number": {
            "type": "string",
            "example": "AUS-1930-PENNY"
          },
          "coin_grade_text": {
            "type": "string",
            "example": "AUS-1930-PENNY"
          },
          "coin_our_grade": {
            "type": "number",
            "example": 10,
            "default": 0
          },
          "coin_grade_type": {
            "type": "string",
            "example": "any"
          },
          "coin_grade": {
            "type": "number",
            "example": 10,
            "default": 0
          },
          "coin_grade_suffix": {
            "type": "string",
            "example": "PR"
          },
          "coin_grade_prefix": {
            "type": "string",
            "example": "VZ"
          },
          "year_text": {
            "type": "string",
            "example": "1897/3"
          },
          "year_date": {
            "format": "date-time",
            "type": "string",
            "example": "1897"
          },
          "is_second_hand": {
            "type": "boolean",
            "example": true,
            "default": true
          },
          "is_consignment": {
            "type": "boolean",
            "example": true,
            "default": true
          },
          "is_on_hold": {
            "type": "boolean",
            "example": true,
            "default": true
          },
          "status": {
            "type": "string",
            "example": "pending",
            "enum": ["pending", "sold", "archived"]
          },
          "sold_date": {
            "format": "date-time",
            "type": "string",
            "example": "2024-01-01T10:00:00.000Z"
          },
          "archived_at": {
            "format": "date-time",
            "type": "string",
            "example": "2024-01-01T10:00:00.000Z"
          },
          "sold_price": {
            "type": "number",
            "example": 10,
            "default": 0
          },
          "discount_price": {
            "type": "number",
            "example": 10,
            "default": 0
          },
          "price": {
            "type": "number",
            "example": 10,
            "default": 0
          },
          "quantity": {
            "type": "number",
            "example": 10,
            "default": 0
          },
          "is_active": {
            "type": "boolean",
            "example": true,
            "default": true
          },
          "stars": {
            "type": "number",
            "example": 4,
            "default": 0
          },
          "product_master_image_id": {
            "type": "string",
            "example": "img-uuid-123",
            "nullable": true
          },
          "certificate_provider_id": {
            "type": "string",
            "example": "cert-providr-uuid-123",
            "nullable": true
          },
          "created_at": {
            "format": "date-time",
            "type": "string",
            "example": "2024-01-01T10:00:00.000Z"
          }
        },
        "required": [
          "id",
          "product_identity",
          "product_sku",
          "coin_video",
          "is_coin_video",
          "product_web_sku",
          "cert_number",
          "coin_number",
          "coin_grade_text",
          "coin_grade_type",
          "coin_grade_suffix",
          "coin_grade_prefix",
          "year_text",
          "year_date",
          "status",
          "sold_date",
          "archived_at",
          "created_at"
        ]
      },
      "CartItemDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "product_id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "cart_id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "quantity": {
            "type": "number",
            "example": "svm2yb3aeq"
          },
          "product": {
            "$ref": "#/components/schemas/ProductBaseDto"
          }
        },
        "required": ["id", "product_id", "cart_id", "quantity", "product"]
      },
      "CartItemPaginateDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CartItemDto"
            }
          },
          "meta": {
            "example": {
              "totalItems": 1,
              "itemCount": 1,
              "itemsPerPage": 10,
              "totalPages": 1,
              "currentPage": 1
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterMetaDto"
              }
            ]
          },
          "links": {
            "type": "object",
            "example": {
              "first": "string",
              "previous": "string",
              "next": "string",
              "last": "string"
            }
          }
        },
        "required": ["items", "meta", "links"]
      },
      "CategoryBaseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "parent_id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "code": {
            "type": "string",
            "example": "TRY"
          }
        },
        "required": ["id", "parent_id", "code"]
      },
      "LanguageDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "code": {
            "type": "string",
            "example": "tr"
          },
          "local_code": {
            "type": "string",
            "example": "tr_TR"
          },
          "name": {
            "type": "string",
            "example": "Türkçe"
          }
        },
        "required": ["id", "code", "local_code", "name"]
      },
      "CategoryPaginateItemDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Basic title"
          },
          "slug": {
            "type": "string",
            "example": "basic-url"
          },
          "description": {
            "type": "string",
            "example": "Basic description"
          },
          "meta_description": {
            "type": "string",
            "example": "Mesta descripiton"
          },
          "meta_keywords": {
            "type": "string",
            "example": "Meta keywords"
          },
          "meta_title": {
            "type": "string",
            "example": "Meta title"
          },
          "language_id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "category": {
            "$ref": "#/components/schemas/CategoryBaseDto"
          },
          "id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "language": {
            "$ref": "#/components/schemas/LanguageDto"
          }
        },
        "required": [
          "title",
          "slug",
          "description",
          "meta_description",
          "meta_keywords",
          "meta_title",
          "language_id",
          "category",
          "id",
          "language"
        ]
      },
      "CategoryPaginateDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryPaginateItemDto"
            }
          },
          "meta": {
            "example": {
              "totalItems": 1,
              "itemCount": 1,
              "itemsPerPage": 10,
              "totalPages": 1,
              "currentPage": 1
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterMetaDto"
              }
            ]
          },
          "links": {
            "type": "object",
            "example": {
              "first": "string",
              "previous": "string",
              "next": "string",
              "last": "string"
            }
          }
        },
        "required": ["items", "meta", "links"]
      },
      "TranslationBaseDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Basic title"
          },
          "slug": {
            "type": "string",
            "example": "basic-url"
          },
          "description": {
            "type": "string",
            "example": "Basic description"
          },
          "meta_description": {
            "type": "string",
            "example": "Mesta descripiton"
          },
          "meta_keywords": {
            "type": "string",
            "example": "Meta keywords"
          },
          "meta_title": {
            "type": "string",
            "example": "Meta title"
          },
          "language_id": {
            "type": "string",
            "example": "svm2yb3aeq"
          }
        },
        "required": [
          "title",
          "slug",
          "description",
          "meta_description",
          "meta_keywords",
          "meta_title",
          "language_id"
        ]
      },
      "CategoryCreateDto": {
        "type": "object",
        "properties": {
          "parent_id": {
            "type": "string",
            "example": null
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TranslationBaseDto"
            }
          }
        },
        "required": ["translations"]
      },
      "CategoryTreeSortUpdateItemDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "sort": {
            "type": "number",
            "example": 1
          }
        }
      },
      "CategoryTreeSortUpdateDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryTreeSortUpdateItemDto"
            }
          }
        },
        "required": ["items"]
      },
      "TranslationBaseIdDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "title": {
            "type": "string",
            "example": "Basic title"
          },
          "slug": {
            "type": "string",
            "example": "basic-url"
          },
          "description": {
            "type": "string",
            "example": "Basic description"
          },
          "meta_description": {
            "type": "string",
            "example": "Mesta descripiton"
          },
          "meta_keywords": {
            "type": "string",
            "example": "Meta keywords"
          },
          "meta_title": {
            "type": "string",
            "example": "Meta title"
          },
          "language_id": {
            "type": "string",
            "example": "svm2yb3aeq"
          }
        },
        "required": [
          "id",
          "title",
          "slug",
          "description",
          "meta_description",
          "meta_keywords",
          "meta_title",
          "language_id"
        ]
      },
      "CategoryUpdateDto": {
        "type": "object",
        "properties": {
          "parent_id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TranslationBaseIdDto"
            }
          }
        },
        "required": ["translations"]
      },
      "BulkItemDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of the item to delete",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          }
        },
        "required": ["id"]
      },
      "BulkDeleteDto": {
        "type": "object",
        "properties": {
          "bulks": {
            "description": "List of items to delete",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BulkItemDto"
            }
          }
        },
        "required": ["bulks"]
      },
      "TranslationDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Basic title"
          },
          "slug": {
            "type": "string",
            "example": "basic-url"
          },
          "description": {
            "type": "string",
            "example": "Basic description"
          },
          "meta_description": {
            "type": "string",
            "example": "Mesta descripiton"
          },
          "meta_keywords": {
            "type": "string",
            "example": "Meta keywords"
          },
          "meta_title": {
            "type": "string",
            "example": "Meta title"
          },
          "language_id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "language": {
            "$ref": "#/components/schemas/LanguageDto"
          }
        },
        "required": [
          "title",
          "slug",
          "description",
          "meta_description",
          "meta_keywords",
          "meta_title",
          "language_id",
          "id",
          "language"
        ]
      },
      "CategoryDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "parent_id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "code": {
            "type": "string",
            "example": "TRY"
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TranslationDto"
            }
          }
        },
        "required": ["id", "parent_id", "code", "translations"]
      },
      "CategoryListDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryDto"
            }
          }
        },
        "required": ["items"]
      },
      "CategoryTreeDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Category ID"
          },
          "code": {
            "type": "string",
            "description": "Category code"
          },
          "title": {
            "type": "string",
            "description": "Category title"
          },
          "slug": {
            "type": "string",
            "description": "Category slug"
          },
          "description": {
            "type": "string",
            "description": "Category description"
          },
          "meta_title": {
            "type": "string",
            "description": "Meta title"
          },
          "meta_description": {
            "type": "string",
            "description": "Meta description"
          },
          "meta_keywords": {
            "type": "string",
            "description": "Meta keywords"
          },
          "children": {
            "description": "Child categories",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryTreeDto"
            }
          }
        },
        "required": ["id", "code", "title", "slug", "children"]
      },
      "CertificateProviderBadgeTranslationCreateOrUpdateDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "name": {
            "type": "string",
            "example": "authenticity..."
          },
          "description": {
            "type": "string",
            "example": "Pgsd..."
          },
          "language_id": {
            "type": "string",
            "example": "svm2yb3aeq"
          }
        },
        "required": ["name", "description", "language_id"]
      },
      "CertificateBadgeCreateDto": {
        "type": "object",
        "properties": {
          "certificate_provider_id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "icon": {
            "type": "string",
            "example": "icon"
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CertificateProviderBadgeTranslationCreateOrUpdateDto"
            }
          }
        },
        "required": ["certificate_provider_id", "icon", "translations"]
      },
      "CertificateBadgeUpdateDto": {
        "type": "object",
        "properties": {
          "icon": {
            "type": "string",
            "example": "icon"
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CertificateProviderBadgeTranslationCreateOrUpdateDto"
            }
          }
        },
        "required": ["icon", "translations"]
      },
      "CertificateProviderBadgeTranslationBaseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "name": {
            "type": "string",
            "example": "authenticity..."
          },
          "description": {
            "type": "string",
            "example": "Pgsd..."
          },
          "language": {
            "$ref": "#/components/schemas/LanguageDto"
          }
        },
        "required": ["id", "name", "description", "language"]
      },
      "CertificateProviderBadgeDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "icon": {
            "type": "string",
            "example": "Pgsd"
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CertificateProviderBadgeTranslationBaseDto"
            }
          }
        },
        "required": ["id", "icon", "translations"]
      },
      "CertificateProviderTranslationBaseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "authenticity": {
            "type": "string",
            "example": "authenticity..."
          },
          "note_on_taxes": {
            "type": "string",
            "example": "note on taxes..."
          },
          "description": {
            "type": "string",
            "example": "Pgsd..."
          },
          "language": {
            "$ref": "#/components/schemas/LanguageDto"
          }
        },
        "required": [
          "id",
          "authenticity",
          "note_on_taxes",
          "description",
          "language"
        ]
      },
      "CertificateProviderListItemDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "image": {
            "type": "string",
            "example": "/images/pgds"
          },
          "name": {
            "type": "string",
            "example": "Pgsd"
          },
          "badges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CertificateProviderBadgeDto"
            }
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CertificateProviderTranslationBaseDto"
            }
          }
        },
        "required": ["id", "image", "name", "badges", "translations"]
      },
      "CertificateProviderListDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CertificateProviderListItemDto"
            }
          }
        },
        "required": ["items"]
      },
      "CertificateProviderTranslationCreateOrUpdateBaseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "language_id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "authenticity": {
            "type": "string",
            "example": "authenticity..."
          },
          "our_grade": {
            "type": "string",
            "example": "our grade..."
          },
          "note_on_taxes": {
            "type": "string",
            "example": "note on taxes..."
          },
          "description": {
            "type": "string",
            "example": "Pgsd..."
          }
        },
        "required": ["language_id"]
      },
      "CertificateProviderUpdateDto": {
        "type": "object",
        "properties": {
          "image": {
            "type": "string",
            "example": "/images/pgds"
          },
          "name": {
            "type": "string",
            "example": "Pgsd"
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CertificateProviderTranslationCreateOrUpdateBaseDto"
            }
          }
        },
        "required": ["translations"]
      },
      "CurrencyPaginateDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CurrencyDto"
            }
          },
          "meta": {
            "example": {
              "totalItems": 1,
              "itemCount": 1,
              "itemsPerPage": 10,
              "totalPages": 1,
              "currentPage": 1
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterMetaDto"
              }
            ]
          },
          "links": {
            "type": "object",
            "example": {
              "first": "string",
              "previous": "string",
              "next": "string",
              "last": "string"
            }
          }
        },
        "required": ["items", "meta", "links"]
      },
      "CurrencyCreateOrUpdateDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "example": "TRY"
          },
          "symbol": {
            "type": "string",
            "example": "₺"
          }
        },
        "required": ["code", "symbol"]
      },
      "CurrencyListDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CurrencyDto"
            }
          }
        },
        "required": ["items"]
      },
      "DailySalesItemDto": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "description": "Date of sales (YYYY-MM-DD)",
            "example": "2023-01-01"
          },
          "totalSales": {
            "type": "number",
            "description": "Total sales amount for the day",
            "example": 1250.75
          },
          "orderCount": {
            "type": "number",
            "description": "Number of orders for the day",
            "example": 5
          }
        },
        "required": ["date", "totalSales", "orderCount"]
      },
      "DailySalesResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "description": "List of daily sales data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DailySalesItemDto"
            }
          },
          "startDate": {
            "type": "string",
            "description": "Start date of the report period",
            "example": "2023-01-01"
          },
          "endDate": {
            "type": "string",
            "description": "End date of the report period",
            "example": "2023-01-31"
          }
        },
        "required": ["data", "startDate", "endDate"]
      },
      "FileEntry": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the file or folder",
            "example": "document.txt"
          },
          "path": {
            "type": "string",
            "description": "Full path of the file or folder",
            "example": "uploads/documents/document.txt"
          },
          "isDirectory": {
            "type": "boolean",
            "description": "Indicates if the entry is a directory",
            "example": false
          },
          "size": {
            "type": "number",
            "description": "Size of the file in bytes (0 for folders)",
            "example": 1024
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Last update timestamp in ISO 8601 format",
            "example": "2023-10-27T10:00:00Z"
          },
          "mimeType": {
            "type": "string",
            "description": "MIME type of the file",
            "example": "image/png"
          },
          "filePreviewPath": {
            "type": "string",
            "description": "URL path for file preview if applicable",
            "example": "/preview/uploads/documents/document.txt"
          }
        },
        "required": ["name", "path", "isDirectory"]
      },
      "CreateFolderDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the folder to create.",
            "example": "new-folder"
          },
          "parentId": {
            "type": "string",
            "description": "The path of the parent folder. If null, created in root.",
            "example": "/documents",
            "nullable": true
          }
        },
        "required": ["name"]
      },
      "UploadFileDto": {
        "type": "object",
        "properties": {
          "file": {
            "type": "string",
            "format": "binary"
          },
          "target_path": {
            "type": "string",
            "description": "Optional target path where the file should be uploaded within the storage. Defaults to root.",
            "example": "images/avatars"
          }
        },
        "required": ["file"]
      },
      "CopyFileDto": {
        "type": "object",
        "properties": {
          "source": {
            "type": "string",
            "description": "The current path of the file or folder to copy.",
            "example": "/products/image.jpg"
          },
          "destination": {
            "type": "string",
            "description": "The destination parent directory path.",
            "example": "/backup/products"
          }
        },
        "required": ["source", "destination"]
      },
      "MoveFileDto": {
        "type": "object",
        "properties": {
          "source": {
            "type": "string",
            "description": "The current path of the file or folder to move.",
            "example": "/products/image.jpg"
          },
          "destination": {
            "type": "string",
            "description": "The destination parent directory path.",
            "example": "/archive"
          }
        },
        "required": ["source", "destination"]
      },
      "RenameFileDto": {
        "type": "object",
        "properties": {
          "source": {
            "type": "string",
            "description": "The current path of the file or folder to rename.",
            "example": "/products/image.jpg"
          },
          "new_name": {
            "type": "string",
            "description": "The new name for the file or folder (not the full path).",
            "example": "new-image.jpg"
          }
        },
        "required": ["source", "new_name"]
      },
      "DeleteFileDto": {
        "type": "object",
        "properties": {
          "paths": {
            "description": "The paths of the files or folders to delete. Ensure paths are consistent.",
            "example": ["/products/image.jpg", "/products/old-category/"],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["paths"]
      },
      "LanguageKeywordGroupDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "key": {
            "type": "string",
            "example": "coin"
          },
          "title": {
            "type": "string",
            "example": "Coin"
          },
          "description": {
            "type": "string",
            "example": "Coin"
          }
        },
        "required": ["id", "key", "title", "description"]
      },
      "LanguageKeywordGroupPaginateDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LanguageKeywordGroupDto"
            }
          },
          "meta": {
            "example": {
              "totalItems": 1,
              "itemCount": 1,
              "itemsPerPage": 10,
              "totalPages": 1,
              "currentPage": 1
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterMetaDto"
              }
            ]
          },
          "links": {
            "type": "object",
            "example": {
              "first": "string",
              "previous": "string",
              "next": "string",
              "last": "string"
            }
          }
        },
        "required": ["items", "meta", "links"]
      },
      "LanguageKeywordTranslationDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "value": {
            "type": "string",
            "example": "coin"
          }
        },
        "required": ["id", "value"]
      },
      "LanguageKeywordDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "key": {
            "type": "string",
            "example": "coin"
          },
          "description": {
            "type": "string",
            "example": "Coin"
          },
          "language_keyword_translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LanguageKeywordTranslationDto"
            }
          }
        },
        "required": [
          "id",
          "key",
          "description",
          "language_keyword_translations"
        ]
      },
      "LanguageKeywordGroupListItemDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "key": {
            "type": "string",
            "example": "coin"
          },
          "title": {
            "type": "string",
            "example": "Coin"
          },
          "description": {
            "type": "string",
            "example": "Coin"
          },
          "language_keywords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LanguageKeywordDto"
            }
          }
        },
        "required": ["id", "key", "title", "description", "language_keywords"]
      },
      "LanguageKeywordGroupListDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LanguageKeywordGroupListItemDto"
            }
          }
        },
        "required": ["items"]
      },
      "LanguageKeywordTranslationUpdateDto": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "example": "coin"
          }
        },
        "required": ["value"]
      },
      "LanguageKeywordTranslationCreateDto": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "Translation value",
            "example": "Hello World"
          },
          "languageId": {
            "type": "string",
            "description": "Language ID",
            "example": "clkj3z1xh0000uy08zxxx0000"
          }
        },
        "required": ["value", "languageId"]
      },
      "LanguagePaginateDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LanguageDto"
            }
          },
          "meta": {
            "example": {
              "totalItems": 1,
              "itemCount": 1,
              "itemsPerPage": 10,
              "totalPages": 1,
              "currentPage": 1
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterMetaDto"
              }
            ]
          },
          "links": {
            "type": "object",
            "example": {
              "first": "string",
              "previous": "string",
              "next": "string",
              "last": "string"
            }
          }
        },
        "required": ["items", "meta", "links"]
      },
      "LanguageCreateOrUpdateDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "example": "tr"
          },
          "local_code": {
            "type": "string",
            "example": "tr_TR"
          },
          "name": {
            "type": "string",
            "example": "Türkçe"
          }
        },
        "required": ["code", "local_code", "name"]
      },
      "LanguageListDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LanguageDto"
            }
          }
        },
        "required": ["items"]
      },
      "MessageResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Message ID"
          },
          "name": {
            "type": "string",
            "description": "Name of the person who sent the message"
          },
          "email": {
            "type": "string",
            "description": "Email of the person who sent the message"
          },
          "phone": {
            "type": "string",
            "description": "Phone number of the person who sent the message"
          },
          "message": {
            "type": "string",
            "description": "Message content"
          },
          "joinEmailList": {
            "type": "boolean",
            "description": "Whether the user joined the email list"
          },
          "productId": {
            "type": "string",
            "description": "Product ID the message is related to"
          },
          "productName": {
            "type": "string",
            "description": "Product name the message is related to"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Date the message was created"
          }
        },
        "required": ["id", "name", "email", "joinEmailList", "createdAt"]
      },
      "OrderPriceDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "subtotal_fee": {
            "type": "number",
            "example": 1
          },
          "shipping_fee": {
            "type": "number",
            "example": 1
          },
          "purchase_method_fee": {
            "type": "number",
            "example": 1
          },
          "additional_fee": {
            "type": "number",
            "example": 1
          },
          "additional_fee_description": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "total_amount": {
            "type": "number",
            "example": 1
          },
          "insurance_fee": {
            "type": "number",
            "example": 1
          },
          "discount_fee": {
            "type": "number",
            "example": 1
          },
          "currency_code": {
            "type": "string",
            "example": "USD"
          },
          "final_price": {
            "type": "number",
            "example": 1
          },
          "created_at": {
            "format": "date-time",
            "type": "string",
            "example": "2025-05-23T22:31:42.000Z"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string",
            "example": "2025-05-23T22:31:42.000Z"
          }
        },
        "required": [
          "id",
          "subtotal_fee",
          "shipping_fee",
          "purchase_method_fee",
          "additional_fee",
          "additional_fee_description",
          "total_amount",
          "insurance_fee",
          "discount_fee",
          "currency_code",
          "final_price",
          "created_at",
          "updated_at"
        ]
      },
      "OrderManualDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": " svm2yb3aeq"
          },
          "admin_first_name": {
            "type": "string",
            "example": "John"
          },
          "admin_last_name": {
            "type": "string",
            "example": "Doe"
          },
          "admin_email": {
            "type": "string",
            "example": "john.doe@example.com"
          },
          "user_id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "created_at": {
            "format": "date-time",
            "type": "string",
            "example": "2025-05-23T22:31:42.000Z"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string",
            "example": "2025-05-23T22:31:42.000Z"
          }
        },
        "required": [
          "id",
          "admin_first_name",
          "admin_last_name",
          "admin_email",
          "user_id",
          "created_at",
          "updated_at"
        ]
      },
      "OrderCustomerDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "user_id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "first_name": {
            "type": "string",
            "example": "John"
          },
          "last_name": {
            "type": "string",
            "example": "Doe"
          },
          "email": {
            "type": "string",
            "example": "john.doe@example.com"
          },
          "phone": {
            "type": "string",
            "example": "+123456789"
          },
          "phone_code": {
            "type": "string",
            "example": "+1"
          },
          "created_at": {
            "format": "date-time",
            "type": "string",
            "example": "2025-05-23T22:31:42.000Z"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string",
            "example": "2025-05-23T22:31:42.000Z"
          }
        },
        "required": [
          "id",
          "first_name",
          "last_name",
          "email",
          "phone",
          "phone_code",
          "created_at",
          "updated_at"
        ]
      },
      "OrderDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "order_no": {
            "type": "string",
            "example": "ORD-123456"
          },
          "status": {
            "type": "string",
            "example": "PENDING",
            "enum": [
              "PENDING",
              "PROCESSING",
              "ON_HOLD",
              "SHIPPED",
              "CANCELED",
              "COMPLETE"
            ]
          },
          "payment_method": {
            "type": "string",
            "example": "CREDIT_CARD",
            "enum": ["CREDIT_CARD", "BANK_TRANSFER", "POS_CREDIT_CARD"]
          },
          "comment": {
            "type": "string",
            "example": "comment"
          },
          "note": {
            "type": "string",
            "example": "note"
          },
          "order_price_id": {
            "type": "string",
            "example": "order_price_id"
          },
          "order_manual_id": {
            "type": "string",
            "example": "order_manual_id"
          },
          "order_customer_id": {
            "type": "string",
            "example": "order_customer_id"
          },
          "invoice_no": {
            "type": "string",
            "example": "invoice_no"
          },
          "invoice_date": {
            "format": "date-time",
            "type": "string",
            "example": "2025-05-22T19:27:25.000Z"
          },
          "invoice_url": {
            "type": "string",
            "example": "invoices/invoice_123_1641234567890.pdf"
          },
          "order_price": {
            "$ref": "#/components/schemas/OrderPriceDto"
          },
          "order_manual": {
            "$ref": "#/components/schemas/OrderManualDto"
          },
          "order_customer": {
            "$ref": "#/components/schemas/OrderCustomerDto"
          },
          "created_at": {
            "format": "date-time",
            "type": "string",
            "example": "2025-05-22T19:27:25.000Z"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string",
            "example": "2025-05-22T19:27:25.000Z"
          }
        },
        "required": [
          "id",
          "order_no",
          "status",
          "payment_method",
          "order_price_id",
          "order_manual_id",
          "order_customer_id",
          "created_at",
          "updated_at"
        ]
      },
      "OrderPaginateDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderDto"
            }
          },
          "meta": {
            "example": {
              "totalItems": 1,
              "itemCount": 1,
              "itemsPerPage": 10,
              "totalPages": 1,
              "currentPage": 1
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterMetaDto"
              }
            ]
          },
          "links": {
            "type": "object",
            "example": {
              "first": "string",
              "previous": "string",
              "next": "string",
              "last": "string"
            }
          }
        },
        "required": ["items", "meta", "links"]
      },
      "OrderItemCreateDto": {
        "type": "object",
        "properties": {
          "product_id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "quantity": {
            "type": "number",
            "example": 1
          },
          "price": {
            "type": "number",
            "example": 1
          }
        },
        "required": ["product_id", "quantity", "price"]
      },
      "OrderCreateDto": {
        "type": "object",
        "properties": {
          "currency_id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "customer_id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "shipping_method": {
            "type": "string",
            "example": "STANDARD",
            "enum": ["STANDARD", "EXPEDITED", "EXPRESS_DOMESTIC"]
          },
          "payment_method": {
            "type": "string",
            "example": "CREDIT_CARD",
            "enum": ["CREDIT_CARD", "BANK_TRANSFER", "POS_CREDIT_CARD"]
          },
          "is_send_order_confirmation_email": {
            "type": "boolean",
            "example": false
          },
          "order_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItemCreateDto"
            }
          },
          "shipping_address_id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "additional_fee_description": {
            "type": "string",
            "example": "additional_fee_description"
          },
          "comment": {
            "type": "string",
            "example": "comment"
          },
          "is_insurance": {
            "type": "boolean",
            "example": false
          },
          "additional_fee": {
            "type": "number",
            "example": 1
          }
        },
        "required": [
          "currency_id",
          "customer_id",
          "shipping_method",
          "payment_method",
          "is_send_order_confirmation_email",
          "order_items",
          "shipping_address_id",
          "is_insurance",
          "additional_fee"
        ]
      },
      "OrderStatusUpdateDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "PROCESSING",
            "enum": [
              "PENDING",
              "PROCESSING",
              "ON_HOLD",
              "SHIPPED",
              "CANCELED",
              "COMPLETE"
            ],
            "description": "Order status"
          },
          "comment": {
            "type": "string",
            "example": "Status updated by admin",
            "description": "Optional comment about the status update"
          },
          "tracking_number": {
            "type": "string",
            "example": "123456789",
            "description": "Tracking number"
          }
        },
        "required": ["status"]
      },
      "StarCountDto": {
        "type": "object",
        "properties": {
          "product_stars": {
            "type": "number",
            "example": 4,
            "default": 0
          }
        }
      },
      "ProductImageDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "img-uuid-12345",
            "description": "Unique ID of the image"
          },
          "image_url": {
            "type": "string",
            "example": "/images/product-1.jpg",
            "description": "URL of the product image"
          },
          "alt": {
            "type": "string",
            "example": "Private collection gold coin",
            "description": "Description or alternative text of the image"
          },
          "position": {
            "type": "number",
            "example": 1,
            "description": "Sort position of the image"
          },
          "created_at": {
            "format": "date-time",
            "type": "string",
            "example": "2024-03-18T12:00:00.000Z",
            "description": "Date the image was created"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string",
            "example": "2024-03-19T15:30:00.000Z",
            "description": "Last updated date of the image"
          }
        },
        "required": [
          "id",
          "image_url",
          "alt",
          "position",
          "created_at",
          "updated_at"
        ]
      },
      "ProductListItemDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "product_identity": {
            "type": "string",
            "example": "AUS-1930-PENNY"
          },
          "product_sku": {
            "type": "string",
            "example": "AUS-1930-PENNY"
          },
          "coin_video": {
            "type": "string",
            "example": "AUS-1930-PENNY"
          },
          "is_coin_video": {
            "type": "boolean",
            "example": true
          },
          "product_web_sku": {
            "type": "string",
            "example": "AUS-1930-PENNY"
          },
          "cert_number": {
            "type": "string",
            "example": "AUS-1930-PENNY"
          },
          "coin_number": {
            "type": "string",
            "example": "AUS-1930-PENNY"
          },
          "coin_grade_text": {
            "type": "string",
            "example": "AUS-1930-PENNY"
          },
          "coin_our_grade": {
            "type": "number",
            "example": 10,
            "default": 0
          },
          "coin_grade_type": {
            "type": "string",
            "example": "any"
          },
          "coin_grade": {
            "type": "number",
            "example": 10,
            "default": 0
          },
          "coin_grade_suffix": {
            "type": "string",
            "example": "PR"
          },
          "coin_grade_prefix": {
            "type": "string",
            "example": "VZ"
          },
          "year_text": {
            "type": "string",
            "example": "1897/3"
          },
          "year_date": {
            "format": "date-time",
            "type": "string",
            "example": "1897"
          },
          "is_second_hand": {
            "type": "boolean",
            "example": true,
            "default": true
          },
          "is_consignment": {
            "type": "boolean",
            "example": true,
            "default": true
          },
          "is_on_hold": {
            "type": "boolean",
            "example": true,
            "default": true
          },
          "status": {
            "type": "string",
            "example": "pending",
            "enum": ["pending", "sold", "archived"]
          },
          "sold_date": {
            "format": "date-time",
            "type": "string",
            "example": "2024-01-01T10:00:00.000Z"
          },
          "archived_at": {
            "format": "date-time",
            "type": "string",
            "example": "2024-01-01T10:00:00.000Z"
          },
          "sold_price": {
            "type": "number",
            "example": 10,
            "default": 0
          },
          "discount_price": {
            "type": "number",
            "example": 10,
            "default": 0
          },
          "price": {
            "type": "number",
            "example": 10,
            "default": 0
          },
          "quantity": {
            "type": "number",
            "example": 10,
            "default": 0
          },
          "is_active": {
            "type": "boolean",
            "example": true,
            "default": true
          },
          "_count": {
            "$ref": "#/components/schemas/StarCountDto"
          },
          "product_master_image_id": {
            "type": "string",
            "example": "img-uuid-123",
            "nullable": true
          },
          "certificate_provider_id": {
            "type": "string",
            "example": "cert-providr-uuid-123",
            "nullable": true
          },
          "created_at": {
            "format": "date-time",
            "type": "string",
            "example": "2024-01-01T10:00:00.000Z"
          },
          "categories": {
            "$ref": "#/components/schemas/CategoryDto"
          },
          "product_master_image": {
            "$ref": "#/components/schemas/ProductImageDto"
          }
        },
        "required": [
          "id",
          "product_identity",
          "product_sku",
          "coin_video",
          "is_coin_video",
          "product_web_sku",
          "cert_number",
          "coin_number",
          "coin_grade_text",
          "coin_grade_type",
          "coin_grade_suffix",
          "coin_grade_prefix",
          "year_text",
          "year_date",
          "status",
          "sold_date",
          "archived_at",
          "created_at",
          "categories",
          "product_master_image"
        ]
      },
      "ProductPaginateItemDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Basic title"
          },
          "slug": {
            "type": "string",
            "example": "basic-url"
          },
          "description": {
            "type": "string",
            "example": "Basic description"
          },
          "meta_description": {
            "type": "string",
            "example": "Mesta descripiton"
          },
          "meta_keywords": {
            "type": "string",
            "example": "Meta keywords"
          },
          "meta_title": {
            "type": "string",
            "example": "Meta title"
          },
          "language_id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "language": {
            "$ref": "#/components/schemas/LanguageDto"
          },
          "product": {
            "$ref": "#/components/schemas/ProductListItemDto"
          }
        },
        "required": [
          "title",
          "slug",
          "description",
          "meta_description",
          "meta_keywords",
          "meta_title",
          "language_id",
          "id",
          "language"
        ]
      },
      "ProductPaginateDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductPaginateItemDto"
            }
          },
          "meta": {
            "example": {
              "totalItems": 1,
              "itemCount": 1,
              "itemsPerPage": 10,
              "totalPages": 1,
              "currentPage": 1
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterMetaDto"
              }
            ]
          },
          "links": {
            "type": "object",
            "example": {
              "first": "string",
              "previous": "string",
              "next": "string",
              "last": "string"
            }
          }
        },
        "required": ["items", "meta"]
      },
      "ProductImageCreateDto": {
        "type": "object",
        "properties": {
          "image_url": {
            "type": "string",
            "example": "/images/product-1.jpg",
            "description": "URL of the product image"
          },
          "alt": {
            "type": "string",
            "example": "Private collection gold coin",
            "description": "Description or alternative text of the image"
          },
          "is_master": {
            "type": "boolean",
            "example": true,
            "description": "Master image of the product"
          },
          "position": {
            "type": "number",
            "example": 1,
            "description": "Sort position of the image"
          }
        },
        "required": ["image_url"]
      },
      "ProductCategoryCreateDto": {
        "type": "object",
        "properties": {
          "category_id": {
            "type": "string",
            "example": "category-67890",
            "description": "ID of the category id"
          }
        },
        "required": ["category_id"]
      },
      "ProductBadgeDto": {
        "type": "object",
        "properties": {
          "certificate_provider_badge_id": {
            "type": "string",
            "example": "certificate-provider-badge-67890",
            "description": "ID of the certificate provider badge id"
          },
          "is_active": {
            "type": "boolean",
            "example": true,
            "description": "Is the badge active or not"
          }
        },
        "required": ["certificate_provider_badge_id", "is_active"]
      },
      "ProductTranslationDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Basic title"
          },
          "slug": {
            "type": "string",
            "example": "basic-url"
          },
          "description": {
            "type": "string",
            "example": "Basic description"
          },
          "meta_description": {
            "type": "string",
            "example": "Mesta descripiton"
          },
          "meta_keywords": {
            "type": "string",
            "example": "Meta keywords"
          },
          "meta_title": {
            "type": "string",
            "example": "Meta title"
          },
          "language_id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "short_description": {
            "type": "string",
            "example": "Short description"
          }
        },
        "required": [
          "title",
          "slug",
          "description",
          "meta_description",
          "meta_keywords",
          "meta_title",
          "language_id",
          "short_description"
        ]
      },
      "ProductCreateDto": {
        "type": "object",
        "properties": {
          "product_identity": {
            "type": "string",
            "example": "AUS-1930-PENNY"
          },
          "product_sku": {
            "type": "string",
            "example": "PR-SKU-PENNY"
          },
          "product_web_sku": {
            "type": "string",
            "example": "PR-SKU-WEB-PENNY"
          },
          "coin_video": {
            "type": "string",
            "example": "PR-SKU-WEB-PENNY"
          },
          "is_coin_video": {
            "type": "boolean",
            "example": true
          },
          "cert_number": {
            "type": "string",
            "example": "CERT-PENNY"
          },
          "coin_number": {
            "type": "string",
            "example": "AUS-1930-PENNY"
          },
          "coin_grade_text": {
            "type": "string",
            "example": "AUS-1930-PENNY"
          },
          "coin_our_grade": {
            "type": "number",
            "example": 10,
            "default": 0
          },
          "coin_grade_type": {
            "type": "string",
            "example": "any"
          },
          "coin_grade": {
            "type": "number",
            "example": 10,
            "default": 0
          },
          "coin_grade_suffix": {
            "type": "string",
            "example": "PR"
          },
          "coin_grade_prefix": {
            "type": "string",
            "example": "VZ"
          },
          "country_id": {
            "type": "string",
            "example": "a7d96957-2996-4638-bffb-7826f89c581d"
          },
          "year_text": {
            "type": "string",
            "example": "1897/3"
          },
          "year_date": {
            "format": "date-time",
            "type": "string",
            "example": "1897"
          },
          "is_second_hand": {
            "type": "boolean",
            "example": true,
            "default": true
          },
          "is_consignment": {
            "type": "boolean",
            "example": true,
            "default": true
          },
          "is_on_hold": {
            "type": "boolean",
            "example": true,
            "default": true
          },
          "status": {
            "type": "string",
            "example": "pending",
            "enum": ["pending", "sold", "archived"]
          },
          "sold_date": {
            "format": "date-time",
            "type": "string",
            "example": "2024-01-01T10:00:00.000Z"
          },
          "archived_at": {
            "format": "date-time",
            "type": "string",
            "example": "2024-01-01T10:00:00.000Z"
          },
          "sold_price": {
            "type": "number",
            "example": 10,
            "default": 0
          },
          "discount_price": {
            "type": "number",
            "example": 10,
            "default": 0
          },
          "price": {
            "type": "number",
            "example": 10,
            "default": 0
          },
          "master_category_id": {
            "type": "string",
            "example": "category-67890",
            "description": "ID of the category id"
          },
          "quantity": {
            "type": "number",
            "example": 10,
            "default": 1
          },
          "is_active": {
            "type": "boolean",
            "example": true,
            "default": true
          },
          "stars": {
            "type": "number",
            "example": 4,
            "default": 0
          },
          "days_on_market": {
            "type": "number",
            "example": 30,
            "default": 0
          },
          "certificate_provider_id": {
            "type": "string",
            "example": "cert-providr-uuid-123",
            "nullable": true
          },
          "xero_tenant_id": {
            "type": "string",
            "example": "xero-tenant-uuid-123",
            "nullable": true
          },
          "product_images": {
            "description": "List of all images of the product",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductImageCreateDto"
            }
          },
          "product_categories": {
            "description": "Add product categories id",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductCategoryCreateDto"
            }
          },
          "product_badges": {
            "description": "Product badge",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductBadgeDto"
            }
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductTranslationDto"
            }
          }
        },
        "required": [
          "product_identity",
          "product_sku",
          "product_web_sku",
          "coin_video",
          "is_coin_video",
          "cert_number",
          "coin_number",
          "coin_grade_text",
          "status",
          "product_categories",
          "product_badges",
          "translations"
        ]
      },
      "ProductImageUpdateDto": {
        "type": "object",
        "properties": {
          "image_url": {
            "type": "string",
            "example": "/images/product-1.jpg",
            "description": "URL of the product image"
          },
          "alt": {
            "type": "string",
            "example": "Private collection gold coin",
            "description": "Description or alternative text of the image"
          },
          "is_master": {
            "type": "boolean",
            "example": true,
            "description": "Master image of the product"
          },
          "position": {
            "type": "number",
            "example": 1,
            "description": "Sort position of the image"
          },
          "id": {
            "type": "string",
            "example": "product-image-67890",
            "description": "ID of the currency to which the price belongs"
          }
        },
        "required": ["image_url"]
      },
      "ProductTranslationUpdateDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Basic title"
          },
          "slug": {
            "type": "string",
            "example": "basic-url"
          },
          "description": {
            "type": "string",
            "example": "Basic description"
          },
          "meta_description": {
            "type": "string",
            "example": "Mesta descripiton"
          },
          "meta_keywords": {
            "type": "string",
            "example": "Meta keywords"
          },
          "meta_title": {
            "type": "string",
            "example": "Meta title"
          },
          "language_id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "short_description": {
            "type": "string",
            "example": "Short description"
          },
          "date_and_denomination": {
            "type": "string",
            "example": "date_and_denomination"
          },
          "tax_note": {
            "type": "string",
            "example": "tax_note"
          }
        },
        "required": [
          "title",
          "slug",
          "description",
          "meta_description",
          "meta_keywords",
          "meta_title",
          "language_id",
          "short_description",
          "date_and_denomination",
          "tax_note"
        ]
      },
      "ProductUpdateDto": {
        "type": "object",
        "properties": {
          "product_identity": {
            "type": "string",
            "example": "AUS-1930-PENNY"
          },
          "product_sku": {
            "type": "string",
            "example": "AUS-1930-PENNY"
          },
          "product_web_sku": {
            "type": "string",
            "example": "AUS-1930-PENNY"
          },
          "cert_number": {
            "type": "string",
            "example": "AUS-1930-PENNY"
          },
          "master_category_id": {
            "type": "string",
            "example": "category-67890",
            "description": "ID of the category id"
          },
          "coin_video": {
            "type": "string",
            "example": "PR-SKU-WEB-PENNY"
          },
          "is_coin_video": {
            "type": "boolean",
            "example": true
          },
          "coin_grade_text": {
            "type": "string",
            "example": "AUS-1930-PENNY"
          },
          "coin_number": {
            "type": "string",
            "example": "AUS-1930-PENNY"
          },
          "coin_our_grade": {
            "type": "number",
            "example": 10,
            "default": 0
          },
          "coin_grade_type": {
            "type": "string",
            "example": "any"
          },
          "country_id": {
            "type": "string",
            "example": "a7d96957-2996-4638-bffb-7826f89c581d"
          },
          "coin_grade": {
            "type": "number",
            "example": 10,
            "default": 0
          },
          "coin_grade_suffix": {
            "type": "string",
            "example": "PR"
          },
          "coin_grade_prefix": {
            "type": "string",
            "example": "VZ"
          },
          "year_text": {
            "type": "string",
            "example": "1897/3"
          },
          "year_date": {
            "format": "date-time",
            "type": "string",
            "example": "1897"
          },
          "is_second_hand": {
            "type": "boolean",
            "example": true,
            "default": true
          },
          "is_consignment": {
            "type": "boolean",
            "example": true,
            "default": true
          },
          "is_on_hold": {
            "type": "boolean",
            "example": true,
            "default": true
          },
          "status": {
            "type": "string",
            "example": "pending",
            "enum": ["pending", "sold", "archived"]
          },
          "sold_date": {
            "format": "date-time",
            "type": "string",
            "example": "2024-01-01T10:00:00.000Z"
          },
          "archived_at": {
            "format": "date-time",
            "type": "string",
            "example": "2024-01-01T10:00:00.000Z"
          },
          "sold_price": {
            "type": "number",
            "example": 10,
            "default": 0
          },
          "discount_price": {
            "type": "number",
            "example": 10,
            "default": 0
          },
          "price": {
            "type": "number",
            "example": 10,
            "default": 0
          },
          "quantity": {
            "type": "number",
            "example": 10,
            "default": 0
          },
          "is_active": {
            "type": "boolean",
            "example": true,
            "default": true
          },
          "stars": {
            "type": "number",
            "example": 4,
            "default": 0
          },
          "days_on_market": {
            "type": "number",
            "example": 30,
            "default": 0
          },
          "product_master_image_id": {
            "type": "string",
            "example": "img-uuid-123",
            "nullable": true
          },
          "certificate_provider_id": {
            "type": "string",
            "example": "cert-providr-uuid-123",
            "nullable": true
          },
          "product_images": {
            "description": "List of all images of the product",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductImageUpdateDto"
            }
          },
          "xero_tenant_id": {
            "type": "string",
            "example": "xero-tenant-uuid-123",
            "nullable": true
          },
          "product_categories": {
            "description": "Add product categories id",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductCategoryCreateDto"
            }
          },
          "product_badges": {
            "description": "Product badge",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductBadgeDto"
            }
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductTranslationUpdateDto"
            }
          }
        },
        "required": [
          "product_identity",
          "product_sku",
          "product_web_sku",
          "cert_number",
          "coin_video",
          "is_coin_video",
          "coin_grade_text",
          "coin_number",
          "coin_grade_type",
          "coin_grade_suffix",
          "coin_grade_prefix",
          "year_text",
          "year_date",
          "status",
          "sold_date",
          "archived_at",
          "product_badges"
        ]
      },
      "ProductDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "product_identity": {
            "type": "string",
            "example": "AUS-1930-PENNY"
          },
          "product_sku": {
            "type": "string",
            "example": "AUS-1930-PENNY"
          },
          "coin_video": {
            "type": "string",
            "example": "AUS-1930-PENNY"
          },
          "is_coin_video": {
            "type": "boolean",
            "example": true
          },
          "product_web_sku": {
            "type": "string",
            "example": "AUS-1930-PENNY"
          },
          "cert_number": {
            "type": "string",
            "example": "AUS-1930-PENNY"
          },
          "coin_number": {
            "type": "string",
            "example": "AUS-1930-PENNY"
          },
          "coin_grade_text": {
            "type": "string",
            "example": "AUS-1930-PENNY"
          },
          "coin_our_grade": {
            "type": "number",
            "example": 10,
            "default": 0
          },
          "coin_grade_type": {
            "type": "string",
            "example": "any"
          },
          "coin_grade": {
            "type": "number",
            "example": 10,
            "default": 0
          },
          "coin_grade_suffix": {
            "type": "string",
            "example": "PR"
          },
          "coin_grade_prefix": {
            "type": "string",
            "example": "VZ"
          },
          "year_text": {
            "type": "string",
            "example": "1897/3"
          },
          "year_date": {
            "format": "date-time",
            "type": "string",
            "example": "1897"
          },
          "is_second_hand": {
            "type": "boolean",
            "example": true,
            "default": true
          },
          "is_consignment": {
            "type": "boolean",
            "example": true,
            "default": true
          },
          "is_on_hold": {
            "type": "boolean",
            "example": true,
            "default": true
          },
          "status": {
            "type": "string",
            "example": "pending",
            "enum": ["pending", "sold", "archived"]
          },
          "sold_date": {
            "format": "date-time",
            "type": "string",
            "example": "2024-01-01T10:00:00.000Z"
          },
          "archived_at": {
            "format": "date-time",
            "type": "string",
            "example": "2024-01-01T10:00:00.000Z"
          },
          "sold_price": {
            "type": "number",
            "example": 10,
            "default": 0
          },
          "discount_price": {
            "type": "number",
            "example": 10,
            "default": 0
          },
          "price": {
            "type": "number",
            "example": 10,
            "default": 0
          },
          "quantity": {
            "type": "number",
            "example": 10,
            "default": 0
          },
          "is_active": {
            "type": "boolean",
            "example": true,
            "default": true
          },
          "stars": {
            "type": "number",
            "example": 4,
            "default": 0
          },
          "product_master_image_id": {
            "type": "string",
            "example": "img-uuid-123",
            "nullable": true
          },
          "certificate_provider_id": {
            "type": "string",
            "example": "cert-providr-uuid-123",
            "nullable": true
          },
          "created_at": {
            "format": "date-time",
            "type": "string",
            "example": "2024-01-01T10:00:00.000Z"
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TranslationDto"
            }
          }
        },
        "required": [
          "id",
          "product_identity",
          "product_sku",
          "coin_video",
          "is_coin_video",
          "product_web_sku",
          "cert_number",
          "coin_number",
          "coin_grade_text",
          "coin_grade_type",
          "coin_grade_suffix",
          "coin_grade_prefix",
          "year_text",
          "year_date",
          "status",
          "sold_date",
          "archived_at",
          "created_at"
        ]
      },
      "ProductListDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductDto"
            }
          }
        },
        "required": ["items"]
      },
      "ProductStarDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "product_id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "user_id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "product": {
            "$ref": "#/components/schemas/ProductBaseDto"
          }
        },
        "required": ["id", "product_id", "user_id", "product"]
      },
      "ProductStarPaginateDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductStarDto"
            }
          },
          "meta": {
            "example": {
              "totalItems": 1,
              "itemCount": 1,
              "itemsPerPage": 10,
              "totalPages": 1,
              "currentPage": 1
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterMetaDto"
              }
            ]
          },
          "links": {
            "type": "object",
            "example": {
              "first": "string",
              "previous": "string",
              "next": "string",
              "last": "string"
            }
          }
        },
        "required": ["items", "meta", "links"]
      },
      "RoleDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "title": {
            "type": "string",
            "example": "Editing Admin"
          },
          "description": {
            "type": "string",
            "example": "Editing Admin"
          }
        },
        "required": ["id", "title", "description"]
      },
      "RolePaginateDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleDto"
            }
          },
          "meta": {
            "example": {
              "totalItems": 1,
              "itemCount": 1,
              "itemsPerPage": 10,
              "totalPages": 1,
              "currentPage": 1
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterMetaDto"
              }
            ]
          },
          "links": {
            "type": "object",
            "example": {
              "first": "string",
              "previous": "string",
              "next": "string",
              "last": "string"
            }
          }
        },
        "required": ["items", "meta", "links"]
      },
      "RoleListDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleDto"
            }
          }
        },
        "required": ["items"]
      },
      "PermissionDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "title": {
            "type": "string",
            "example": "Editing Admin"
          },
          "description": {
            "type": "string",
            "example": "Editing Admin..."
          },
          "permission": {
            "type": "string",
            "example": "CategoryPermission",
            "enum": [
              "OrderPermission",
              "ProductPermission",
              "CreateProductPermission",
              "CategoryPermission",
              "UserPermission",
              "CurrencyPermission",
              "LanguagePermission",
              "ReportPermission",
              "ContentPagePermission",
              "SettingPermission",
              "MappingTablePermission",
              "ConnectionPermission"
            ]
          }
        },
        "required": ["id", "title", "description", "permission"]
      },
      "PermissionListDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PermissionDto"
            }
          }
        },
        "required": ["items"]
      },
      "RolePermissionCreateOrUpdateDto": {
        "type": "object",
        "properties": {
          "permission_id": {
            "type": "string",
            "example": "svm2yb3aeq"
          }
        },
        "required": ["permission_id"]
      },
      "RoleCreateOrUpdateDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Editing Admin"
          },
          "description": {
            "type": "string",
            "example": "Editing Admin"
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RolePermissionCreateOrUpdateDto"
            }
          }
        },
        "required": ["title", "description", "permissions"]
      },
      "SettingDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "notification_emails": {
            "type": "string",
            "example": "info@example.com"
          },
          "shop_without_membership": {
            "type": "boolean",
            "example": false
          },
          "can_be_ordered": {
            "type": "boolean",
            "example": true
          },
          "default_language_code": {
            "type": "string",
            "example": "en"
          },
          "archive_coins_x_days": {
            "type": "number",
            "example": 30
          },
          "manual_credit_card_payment_fee": {
            "type": "number",
            "example": 0
          },
          "foreign_currency_margin_percentage": {
            "type": "number",
            "example": 0
          },
          "insurance_fee": {
            "type": "number",
            "example": 0
          },
          "just_added_day": {
            "type": "number",
            "example": 30
          }
        },
        "required": [
          "id",
          "notification_emails",
          "shop_without_membership",
          "can_be_ordered",
          "default_language_code",
          "archive_coins_x_days",
          "manual_credit_card_payment_fee",
          "foreign_currency_margin_percentage",
          "insurance_fee",
          "just_added_day"
        ]
      },
      "SettingCreateOrUpdateDto": {
        "type": "object",
        "properties": {
          "notification_emails": {
            "type": "string",
            "example": "info@example.com"
          },
          "shop_without_membership": {
            "type": "boolean",
            "example": false
          },
          "can_be_ordered": {
            "type": "boolean",
            "example": true
          },
          "default_language_code": {
            "type": "string",
            "example": "en"
          },
          "archive_coins_x_days": {
            "type": "number",
            "example": 30
          },
          "manual_credit_card_payment_fee": {
            "type": "number",
            "example": 0
          },
          "foreign_currency_margin_percentage": {
            "type": "number",
            "example": 0
          },
          "insurance_fee": {
            "type": "number",
            "example": 0
          },
          "just_added_day": {
            "type": "number",
            "example": 21
          }
        },
        "required": [
          "notification_emails",
          "shop_without_membership",
          "can_be_ordered",
          "default_language_code",
          "archive_coins_x_days",
          "manual_credit_card_payment_fee",
          "foreign_currency_margin_percentage",
          "insurance_fee",
          "just_added_day"
        ]
      },
      "MailSettingDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "smtp_host": {
            "type": "string",
            "example": "smtp.example.com"
          },
          "smtp_port": {
            "type": "number",
            "example": 587
          },
          "smtp_username": {
            "type": "string",
            "example": "user@example.com"
          },
          "smtp_password": {
            "type": "string",
            "example": "securepassword"
          },
          "from_email": {
            "type": "string",
            "example": "noreply@example.com"
          },
          "from_name": {
            "type": "string",
            "example": "noreply enki"
          },
          "use_ssl": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "id",
          "smtp_host",
          "smtp_port",
          "smtp_username",
          "smtp_password",
          "from_email",
          "from_name",
          "use_ssl"
        ]
      },
      "MailChimpSettingDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "api_key": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "server_prefix": {
            "type": "string",
            "example": "us1"
          },
          "audience_id": {
            "type": "string",
            "example": "2321312"
          }
        },
        "required": ["id", "api_key", "server_prefix", "audience_id"]
      },
      "MailChimpSettingCreateOrUpdateDto": {
        "type": "object",
        "properties": {
          "api_key": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "server_prefix": {
            "type": "string",
            "example": "us1"
          },
          "audience_id": {
            "type": "string",
            "example": "2321312"
          }
        },
        "required": ["api_key", "server_prefix", "audience_id"]
      },
      "MailSettingCreateOrUpdateDto": {
        "type": "object",
        "properties": {
          "smtp_host": {
            "type": "string",
            "example": "smtp.example.com"
          },
          "smtp_port": {
            "type": "number",
            "example": 587
          },
          "smtp_username": {
            "type": "string",
            "example": "user@example.com"
          },
          "smtp_password": {
            "type": "string",
            "example": "securepassword"
          },
          "from_email": {
            "type": "string",
            "example": "noreply@example.com"
          },
          "from_name": {
            "type": "string",
            "example": "noreply enki",
            "description": "from name"
          },
          "use_ssl": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "smtp_host",
          "smtp_port",
          "smtp_username",
          "smtp_password",
          "from_email",
          "use_ssl"
        ]
      },
      "EbaySettingDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "client_id": {
            "type": "string",
            "example": "123456789"
          },
          "client_secret": {
            "type": "string",
            "example": "123456789"
          },
          "env_type": {
            "type": "string",
            "example": "SANDBOX",
            "enum": ["SANDBOX", "PRODUCTION"]
          },
          "redirect_ru_name": {
            "type": "string",
            "example": "Drakesterling-Drakeste-drakes-iwflihwu"
          },
          "access_token": {
            "type": "string",
            "example": "smtp.example.com"
          },
          "refresh_token": {
            "type": "string",
            "example": "smtp.example.com"
          },
          "refresh_token_expires_at": {
            "format": "date-time",
            "type": "string",
            "example": "2025-07-18T20:27:48.000Z"
          },
          "token_expires_at": {
            "format": "date-time",
            "type": "string",
            "example": "2025-07-18T20:27:48.000Z"
          }
        },
        "required": [
          "id",
          "client_id",
          "client_secret",
          "env_type",
          "redirect_ru_name",
          "access_token",
          "refresh_token",
          "refresh_token_expires_at",
          "token_expires_at"
        ]
      },
      "EbayLoginDto": {
        "type": "object",
        "properties": {
          "auth_url": {
            "type": "string",
            "example": "https://auth.ebay.com/oauth2/authorize"
          }
        },
        "required": ["auth_url"]
      },
      "EbaySettingCreateOrUpdateDto": {
        "type": "object",
        "properties": {
          "client_id": {
            "type": "string",
            "example": "123456789"
          },
          "client_secret": {
            "type": "string",
            "example": "123456789"
          },
          "env_type": {
            "type": "string",
            "example": "SANDBOX",
            "enum": ["SANDBOX", "PRODUCTION"]
          },
          "redirect_ru_name": {
            "type": "string",
            "example": "Drakesterling-Drakeste-drakes-iwflihwu"
          }
        },
        "required": [
          "client_id",
          "client_secret",
          "env_type",
          "redirect_ru_name"
        ]
      },
      "PaymentSettingDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "pay_at_the_door": {
            "type": "boolean",
            "example": false
          },
          "pay_at_the_door_credit_card": {
            "type": "boolean",
            "example": false
          },
          "eft_transfer": {
            "type": "boolean",
            "example": false
          },
          "stripe_enabled": {
            "type": "boolean",
            "example": true
          },
          "stripe_public_key": {
            "type": "string",
            "example": "pk_test_..."
          },
          "stripe_secret_key": {
            "type": "string",
            "example": "sk_test_..."
          }
        },
        "required": [
          "id",
          "pay_at_the_door",
          "pay_at_the_door_credit_card",
          "eft_transfer",
          "stripe_enabled",
          "stripe_public_key",
          "stripe_secret_key"
        ]
      },
      "PaymentSettingCreateOrUpdateDto": {
        "type": "object",
        "properties": {
          "eft_transfer": {
            "type": "boolean",
            "example": false
          },
          "stripe_enabled": {
            "type": "boolean",
            "example": true
          },
          "stripe_public_key": {
            "type": "string",
            "example": "pk_test_..."
          },
          "stripe_secret_key": {
            "type": "string",
            "example": "sk_test_..."
          }
        },
        "required": [
          "eft_transfer",
          "stripe_enabled",
          "stripe_public_key",
          "stripe_secret_key"
        ]
      },
      "ShippingSettingDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "domestic_shipping_fee": {
            "type": "number",
            "example": 15
          },
          "cover_fee": {
            "type": "number",
            "example": 15
          },
          "express_domestic_shipping_fee": {
            "type": "number",
            "example": 25
          },
          "international_shipping_fee": {
            "type": "number",
            "example": 35
          }
        },
        "required": [
          "id",
          "domestic_shipping_fee",
          "cover_fee",
          "express_domestic_shipping_fee",
          "international_shipping_fee"
        ]
      },
      "ShippingSettingCreateOrUpdateDto": {
        "type": "object",
        "properties": {
          "domestic_shipping_fee": {
            "type": "number",
            "example": 15
          },
          "cover_fee": {
            "type": "number",
            "example": 15
          },
          "express_domestic_shipping_fee": {
            "type": "number",
            "example": 25
          },
          "international_shipping_fee": {
            "type": "number",
            "example": 35
          }
        },
        "required": [
          "domestic_shipping_fee",
          "cover_fee",
          "express_domestic_shipping_fee",
          "international_shipping_fee"
        ]
      },
      "TranslatedDataDto": {
        "type": "object",
        "properties": {}
      },
      "TranslateResponseDto": {
        "type": "object",
        "properties": {
          "from_language": {
            "type": "string",
            "description": "The source language code",
            "example": "en"
          },
          "to_language": {
            "type": "string",
            "description": "The target language code",
            "example": "tr"
          },
          "data": {
            "description": "The translated data",
            "example": {
              "name": "Yazılım Mühendisi",
              "description": "Yazılım mühendisi olarak çalışıyor"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/TranslatedDataDto"
              }
            ]
          }
        },
        "required": ["from_language", "to_language", "data"]
      },
      "TranslateRequestDto": {
        "type": "object",
        "properties": {
          "from_language": {
            "type": "string",
            "description": "The source language code",
            "example": "en"
          },
          "to_language": {
            "type": "string",
            "description": "The target language code",
            "example": "tr"
          },
          "data": {
            "type": "object",
            "description": "The data to translate",
            "example": {
              "name": "Software Engineer",
              "description": "Working as a software engineer"
            }
          }
        },
        "required": ["from_language", "to_language", "data"]
      },
      "UserPaginateDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserDto"
            }
          },
          "meta": {
            "example": {
              "totalItems": 1,
              "itemCount": 1,
              "itemsPerPage": 10,
              "totalPages": 1,
              "currentPage": 1
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterMetaDto"
              }
            ]
          },
          "links": {
            "type": "object",
            "example": {
              "first": "string",
              "previous": "string",
              "next": "string",
              "last": "string"
            }
          }
        },
        "required": ["items", "meta", "links"]
      },
      "UserCreateOrUpdateDto": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string",
            "example": "Uplide"
          },
          "last_name": {
            "type": "string",
            "example": "Developer"
          },
          "type": {
            "type": "string",
            "enum": ["ADMIN", "CUSTOMER"],
            "example": "ADMIN"
          },
          "language_id": {
            "type": "string",
            "example": "a7d96957-2996-4638-bffb-7826f89c581d"
          },
          "email": {
            "type": "string",
            "example": "dev@uplide.com"
          },
          "company_name": {
            "type": "string",
            "example": null,
            "default": null
          },
          "is_view_price": {
            "type": "boolean",
            "example": true,
            "default": true
          },
          "is_approved_for_credit_card": {
            "type": "boolean",
            "example": true,
            "default": false
          },
          "is_approved_for_mailing": {
            "type": "boolean",
            "example": true,
            "default": false
          },
          "is_locked_account": {
            "type": "boolean",
            "example": true,
            "default": false
          },
          "phone": {
            "type": "string",
            "example": "905419322323"
          },
          "password": {
            "type": "string",
            "example": "123456",
            "description": "Yeni kullanıcı oluştururken boş bırakılabilir. Boş bırakılırsa rastgele şifre oluşturulup kullanıcıya e-posta gönderilir."
          },
          "phone_code": {
            "type": "string",
            "example": "+90"
          }
        },
        "required": ["first_name", "last_name", "type", "email"]
      },
      "UserRoleListItemDto": {
        "type": "object",
        "properties": {
          "role_id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "user_id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "role": {
            "$ref": "#/components/schemas/RoleDto"
          }
        },
        "required": ["role_id", "user_id", "role"]
      },
      "UserRoleListDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserRoleListItemDto"
            }
          }
        },
        "required": ["items"]
      },
      "UserRoleUpdateItemDto": {
        "type": "object",
        "properties": {
          "role_id": {
            "type": "string",
            "example": "svm2yb3aeq"
          }
        },
        "required": ["role_id"]
      },
      "UserRoleUpdateDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserRoleUpdateItemDto"
            }
          }
        },
        "required": ["items"]
      },
      "UserListDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserDto"
            }
          }
        },
        "required": ["items"]
      },
      "XeroIntegrationDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "name": {
            "type": "string",
            "example": "Main Xero Integration"
          },
          "client_id": {
            "type": "string",
            "example": "XERO_CLIENT_ID"
          },
          "client_secret": {
            "type": "string",
            "example": "XERO_CLIENT_SECRET"
          },
          "redirect_uri": {
            "type": "string",
            "example": "http://localhost:3000/xero/callback"
          },
          "access_token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
          },
          "refresh_token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
          },
          "token_expires_at": {
            "format": "date-time",
            "type": "string",
            "example": "2025-06-02T21:08:23.000Z"
          }
        },
        "required": [
          "id",
          "name",
          "client_id",
          "client_secret",
          "redirect_uri",
          "access_token",
          "refresh_token",
          "token_expires_at"
        ]
      },
      "XeroIntegrationUpdateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Main Xero Integration"
          },
          "client_id": {
            "type": "string",
            "example": "XERO_CLIENT_ID"
          },
          "client_secret": {
            "type": "string",
            "example": "XERO_CLIENT_SECRET"
          },
          "redirect_uri": {
            "type": "string",
            "example": "http://localhost:3000/xero/callback"
          }
        },
        "required": ["name", "client_id", "client_secret", "redirect_uri"]
      },
      "XeroConnectUrlDto": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "example": "https://login.xero.com/identity/connect/authorize"
          }
        },
        "required": ["url"]
      },
      "XeroTenantDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "tenant_id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "name": {
            "type": "string",
            "example": "Drakesterling"
          },
          "integration_id": {
            "type": "string",
            "example": "svm2yb3aeq"
          }
        },
        "required": ["id", "tenant_id", "name", "integration_id"]
      },
      "XeroTenantListDto": {
        "type": "object",
        "properties": {
          "items": {
            "description": "Xero tenants",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/XeroTenantDto"
            }
          }
        },
        "required": ["items"]
      },
      "SimilarProductResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of the similar product relationship",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "product_id": {
            "type": "string",
            "description": "ID of the product",
            "example": "123e4567-e89b-12d3-a456-426614174001"
          },
          "similar_product_id": {
            "type": "string",
            "description": "ID of the similar product",
            "example": "123e4567-e89b-12d3-a456-426614174002"
          },
          "created_at": {
            "format": "date-time",
            "type": "string",
            "description": "Creation date of the similar product relationship",
            "example": "2023-01-01T12:00:00Z"
          },
          "similar_product": {
            "type": "object",
            "description": "Similar product details",
            "example": {
              "id": "123e4567-e89b-12d3-a456-426614174002",
              "product_web_sku": "PROD-123",
              "price": 100,
              "product_master_image": {
                "image_url": "/images/product.jpg"
              },
              "translations": [
                {
                  "title": "Product Title",
                  "language": {
                    "code": "en"
                  }
                }
              ]
            }
          }
        },
        "required": [
          "id",
          "product_id",
          "similar_product_id",
          "created_at",
          "similar_product"
        ]
      },
      "SimilarProductItemResponseDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SimilarProductResponseDto"
            }
          }
        },
        "required": ["items"]
      },
      "CreateSimilarProductDto": {
        "type": "object",
        "properties": {
          "similar_product_id": {
            "type": "string",
            "description": "ID of the similar product to be added",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          }
        },
        "required": ["similar_product_id"]
      },
      "TranslationMetaDto": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "example": "basic-url"
          },
          "meta_description": {
            "type": "string",
            "example": "Mesta descripiton"
          },
          "meta_title": {
            "type": "string",
            "example": "Meta title"
          },
          "language_id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "language": {
            "$ref": "#/components/schemas/LanguageDto"
          }
        },
        "required": [
          "slug",
          "meta_description",
          "meta_title",
          "language_id",
          "id",
          "language"
        ]
      },
      "PageDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "key": {
            "type": "string",
            "example": "About Us"
          },
          "published": {
            "type": "boolean",
            "example": true
          },
          "is_allowed": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "object",
            "example": "{\"title\": \"About Us\"}"
          },
          "created_at": {
            "format": "date-time",
            "type": "string",
            "example": "2025-05-22T19:27:25.000Z"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string",
            "example": "2025-05-22T19:27:25.000Z"
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TranslationMetaDto"
            }
          }
        },
        "required": [
          "id",
          "key",
          "published",
          "is_allowed",
          "data",
          "created_at",
          "updated_at",
          "translations"
        ]
      },
      "PagePaginateDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PageDto"
            }
          },
          "meta": {
            "example": {
              "totalItems": 1,
              "itemCount": 1,
              "itemsPerPage": 10,
              "totalPages": 1,
              "currentPage": 1
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterMetaDto"
              }
            ]
          },
          "links": {
            "type": "object",
            "example": {
              "first": "string",
              "previous": "string",
              "next": "string",
              "last": "string"
            }
          }
        },
        "required": ["items", "meta", "links"]
      },
      "PageTranslationDto": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "example": "basic-url"
          },
          "meta_description": {
            "type": "string",
            "example": "Mesta descripiton"
          },
          "meta_title": {
            "type": "string",
            "example": "Meta title"
          },
          "language_id": {
            "type": "string",
            "example": "svm2yb3aeq"
          }
        },
        "required": ["slug", "meta_description", "meta_title", "language_id"]
      },
      "PageCreateDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "example": {
              "key": "value"
            }
          },
          "published": {
            "type": "boolean",
            "example": true
          },
          "is_allowed": {
            "type": "boolean",
            "example": false
          },
          "show_on_header": {
            "type": "boolean",
            "example": false
          },
          "show_on_footer": {
            "type": "boolean",
            "example": false
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PageTranslationDto"
            }
          }
        },
        "required": [
          "data",
          "published",
          "is_allowed",
          "show_on_header",
          "show_on_footer",
          "translations"
        ]
      },
      "PageListDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PageDto"
            }
          }
        },
        "required": ["items"]
      },
      "PageTranslationUpdateDto": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "example": "basic-url"
          },
          "meta_description": {
            "type": "string",
            "example": "Mesta descripiton"
          },
          "meta_title": {
            "type": "string",
            "example": "Meta title"
          },
          "language_id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "id": {
            "type": "string",
            "example": "svm2yb3aeq"
          }
        },
        "required": ["slug", "meta_description", "meta_title", "language_id"]
      },
      "PageUpdateDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "example": {
              "key": "value"
            }
          },
          "published": {
            "type": "boolean",
            "example": true
          },
          "is_allowed": {
            "type": "boolean",
            "example": false
          },
          "show_on_header": {
            "type": "boolean",
            "example": false
          },
          "show_on_footer": {
            "type": "boolean",
            "example": false
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PageTranslationUpdateDto"
            }
          }
        }
      },
      "SiteConfigDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "key": {
            "type": "string",
            "example": "About Us"
          },
          "data": {
            "type": "object",
            "example": "{\"title\": \"About Us\"}"
          },
          "created_at": {
            "format": "date-time",
            "type": "string",
            "example": "2025-05-22T19:27:25.000Z"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string",
            "example": "2025-05-22T19:27:25.000Z"
          }
        },
        "required": ["id", "key", "data", "created_at", "updated_at"]
      },
      "SiteConfigListDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SiteConfigDto"
            }
          }
        },
        "required": ["items"]
      },
      "SiteConfigCreateOrUpdateDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "example": {
              "key": "value"
            }
          }
        },
        "required": ["data"]
      },
      "ContentBaseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "image": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "type": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "sort": {
            "type": "number",
            "example": "svm2yb3aeq"
          }
        },
        "required": ["id", "image", "type", "sort"]
      },
      "ContentPaginateItemDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Basic title"
          },
          "slug": {
            "type": "string",
            "example": "basic-url"
          },
          "description": {
            "type": "string",
            "example": "Basic description"
          },
          "meta_description": {
            "type": "string",
            "example": "Mesta descripiton"
          },
          "meta_keywords": {
            "type": "string",
            "example": "Meta keywords"
          },
          "meta_title": {
            "type": "string",
            "example": "Meta title"
          },
          "language_id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "content": {
            "$ref": "#/components/schemas/ContentBaseDto"
          },
          "id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "language": {
            "$ref": "#/components/schemas/LanguageDto"
          }
        },
        "required": [
          "title",
          "slug",
          "description",
          "meta_description",
          "meta_keywords",
          "meta_title",
          "language_id",
          "content",
          "id",
          "language"
        ]
      },
      "ContentPaginateDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContentPaginateItemDto"
            }
          },
          "meta": {
            "example": {
              "totalItems": 1,
              "itemCount": 1,
              "itemsPerPage": 10,
              "totalPages": 1,
              "currentPage": 1
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterMetaDto"
              }
            ]
          },
          "links": {
            "type": "object",
            "example": {
              "first": "string",
              "previous": "string",
              "next": "string",
              "last": "string"
            }
          }
        },
        "required": ["items", "meta", "links"]
      },
      "ContentCreateDto": {
        "type": "object",
        "properties": {
          "image": {
            "type": "string",
            "example": "https://example.com/image.jpg"
          },
          "is_allowed": {
            "type": "boolean",
            "example": true
          },
          "published": {
            "type": "boolean",
            "example": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TranslationBaseDto"
            }
          }
        },
        "required": ["translations"]
      },
      "ContentUpdateDto": {
        "type": "object",
        "properties": {
          "image": {
            "type": "string",
            "example": "https://example.com/image.jpg"
          },
          "is_allowed": {
            "type": "boolean",
            "example": true
          },
          "published": {
            "type": "boolean",
            "example": true
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TranslationBaseIdDto"
            }
          }
        },
        "required": ["translations"]
      },
      "ContentDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "image": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "type": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "sort": {
            "type": "number",
            "example": "svm2yb3aeq"
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TranslationDto"
            }
          }
        },
        "required": ["id", "image", "type", "sort", "translations"]
      },
      "ContentListDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContentDto"
            }
          }
        },
        "required": ["items"]
      },
      "ContentSortUpdateItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "sadasdsad"
          },
          "sort": {
            "type": "number",
            "example": 1
          }
        },
        "required": ["id", "sort"]
      },
      "ContentSortUpdateDto": {
        "type": "object",
        "properties": {
          "sorts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContentSortUpdateItem"
            }
          }
        }
      },
      "PageFormAnswerDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "This is the id of the page",
            "example": "12345678-1234-1234-1234-123456789012"
          },
          "page_id": {
            "type": "string",
            "description": "This is the id of the page",
            "example": "12345678-1234-1234-1234-123456789012"
          },
          "form_name": {
            "type": "string",
            "description": "Page in form name",
            "example": "Contact Form"
          },
          "email": {
            "type": "string",
            "description": "Email of the person sending the message",
            "example": "john.doe@example.com"
          },
          "data": {
            "type": "object",
            "description": "Phone number of the person sending the message (optional)",
            "example": "+1234567890"
          },
          "created_at": {
            "format": "date-time",
            "type": "string",
            "example": "2025-05-22T19:27:25.000Z"
          }
        },
        "required": ["id", "page_id", "form_name", "email", "created_at"]
      },
      "PageFormAnswerPaginateDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PageFormAnswerDto"
            }
          },
          "meta": {
            "example": {
              "totalItems": 1,
              "itemCount": 1,
              "itemsPerPage": 10,
              "totalPages": 1,
              "currentPage": 1
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterMetaDto"
              }
            ]
          },
          "links": {
            "type": "object",
            "example": {
              "first": "string",
              "previous": "string",
              "next": "string",
              "last": "string"
            }
          }
        },
        "required": ["items", "meta", "links"]
      },
      "EcommerceAuthDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "kesemenere123@gmail.com"
          },
          "password": {
            "type": "string",
            "example": "123456"
          }
        },
        "required": ["email", "password"]
      },
      "EcommerceForgetPasswordDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "kesemenere123@gmail.com"
          }
        },
        "required": ["email"]
      },
      "TokenCheckDto": {
        "type": "object",
        "properties": {
          "check": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "EcommerceResetPasswordDto": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "example": "123234"
          },
          "token": {
            "type": "string",
            "example": "kSjASsad2123lskasdsadsdasa2123123adas"
          }
        },
        "required": ["password", "token"]
      },
      "CertificateProviderTranslationDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "aeb4a569-ea46-43ef-b0ba-aa8e96dfdd56"
          },
          "description": {
            "type": "string",
            "example": "The Professional Coin Grading Service (PCGS) is a leading coin grading service that provides expert authentication and grading of coins."
          },
          "authenticity": {
            "type": "string",
            "example": "This item is guaranteed 100% authentic by the Professional Coin Grading Service (PCGS), certificate number 31908038."
          },
          "note_on_taxes": {
            "type": "string",
            "example": "Please note that taxes may apply based on your location and local regulations."
          },
          "created_at": {
            "format": "date-time",
            "type": "string",
            "example": "2025-05-22T21:26:04.078Z"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string",
            "example": "2025-05-22T21:26:04.078Z"
          },
          "certificate_provider_id": {
            "type": "string",
            "example": "89db632f-47cb-4de9-b9d8-092c10c57ff8"
          },
          "language_id": {
            "type": "string",
            "example": "94ea5659-b107-468a-ad53-8954ebfb32c5"
          }
        },
        "required": [
          "id",
          "description",
          "authenticity",
          "note_on_taxes",
          "created_at",
          "updated_at",
          "certificate_provider_id",
          "language_id"
        ]
      },
      "CertificateProviderDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "89db632f-47cb-4de9-b9d8-092c10c57ff8"
          },
          "name": {
            "type": "string",
            "example": "PCGS"
          },
          "image": {
            "type": "string",
            "example": "https://drakesterling-backend.dev.uplide.com/api/ecommerce/file-manager/stream//Grading%20Services/pcgs.png"
          },
          "created_at": {
            "format": "date-time",
            "type": "string",
            "example": "2025-05-22T21:26:04.078Z"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string",
            "example": "2025-05-22T21:26:04.078Z"
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CertificateProviderTranslationDto"
            }
          }
        },
        "required": [
          "id",
          "name",
          "image",
          "created_at",
          "updated_at",
          "translations"
        ]
      },
      "EcommerceProductBasePaginateDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "product_identity": {
            "type": "string",
            "example": "AUS-1930-PENNY"
          },
          "product_sku": {
            "type": "string",
            "example": "AUS-1930-PENNY"
          },
          "coin_video": {
            "type": "string",
            "example": "AUS-1930-PENNY"
          },
          "is_coin_video": {
            "type": "boolean",
            "example": true
          },
          "product_web_sku": {
            "type": "string",
            "example": "AUS-1930-PENNY"
          },
          "cert_number": {
            "type": "string",
            "example": "AUS-1930-PENNY"
          },
          "coin_number": {
            "type": "string",
            "example": "AUS-1930-PENNY"
          },
          "coin_grade_text": {
            "type": "string",
            "example": "AUS-1930-PENNY"
          },
          "coin_our_grade": {
            "type": "number",
            "example": 10,
            "default": 0
          },
          "coin_grade_type": {
            "type": "string",
            "example": "any"
          },
          "coin_grade": {
            "type": "number",
            "example": 10,
            "default": 0
          },
          "coin_grade_suffix": {
            "type": "string",
            "example": "PR"
          },
          "coin_grade_prefix": {
            "type": "string",
            "example": "VZ"
          },
          "year_text": {
            "type": "string",
            "example": "1897/3"
          },
          "year_date": {
            "format": "date-time",
            "type": "string",
            "example": "1897"
          },
          "is_second_hand": {
            "type": "boolean",
            "example": true,
            "default": true
          },
          "is_consignment": {
            "type": "boolean",
            "example": true,
            "default": true
          },
          "is_on_hold": {
            "type": "boolean",
            "example": true,
            "default": true
          },
          "status": {
            "type": "string",
            "example": "pending",
            "enum": ["pending", "sold", "archived"]
          },
          "sold_date": {
            "format": "date-time",
            "type": "string",
            "example": "2024-01-01T10:00:00.000Z"
          },
          "archived_at": {
            "format": "date-time",
            "type": "string",
            "example": "2024-01-01T10:00:00.000Z"
          },
          "sold_price": {
            "type": "number",
            "example": 10,
            "default": 0
          },
          "discount_price": {
            "type": "number",
            "example": 10,
            "default": 0
          },
          "price": {
            "type": "number",
            "example": 10,
            "default": 0
          },
          "quantity": {
            "type": "number",
            "example": 10,
            "default": 0
          },
          "is_active": {
            "type": "boolean",
            "example": true,
            "default": true
          },
          "stars": {
            "type": "number",
            "example": 4,
            "default": 0
          },
          "product_master_image_id": {
            "type": "string",
            "example": "img-uuid-123",
            "nullable": true
          },
          "certificate_provider_id": {
            "type": "string",
            "example": "cert-providr-uuid-123",
            "nullable": true
          },
          "created_at": {
            "format": "date-time",
            "type": "string",
            "example": "2024-01-01T10:00:00.000Z"
          },
          "product_master_image": {
            "$ref": "#/components/schemas/ProductImageDto"
          },
          "certificate_provider": {
            "$ref": "#/components/schemas/CertificateProviderDto"
          },
          "category_slug_paths": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "id",
          "product_identity",
          "product_sku",
          "coin_video",
          "is_coin_video",
          "product_web_sku",
          "cert_number",
          "coin_number",
          "coin_grade_text",
          "coin_grade_type",
          "coin_grade_suffix",
          "coin_grade_prefix",
          "year_text",
          "year_date",
          "status",
          "sold_date",
          "archived_at",
          "created_at",
          "certificate_provider"
        ]
      },
      "EcommerceProductListItemDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "271463da-f3a4-4e81-8b9b-f40eada878db"
          },
          "slug": {
            "type": "string",
            "example": "basic-url-en"
          },
          "title": {
            "type": "string",
            "example": "Basic title EN"
          },
          "description": {
            "type": "string",
            "example": "Basic en"
          },
          "short_description": {
            "type": "string",
            "example": "Short en description"
          },
          "meta_title": {
            "type": "string",
            "example": "Meta en title"
          },
          "meta_description": {
            "type": "string",
            "example": "Mesta en descripiton"
          },
          "meta_keywords": {
            "type": "string",
            "example": "Meta en keywords"
          },
          "date_and_denomination": {
            "type": "string",
            "example": "date_and_denomination"
          },
          "tax_note": {
            "type": "string",
            "example": "tax_note"
          },
          "created_at": {
            "format": "date-time",
            "type": "string",
            "example": "2025-03-24T16:02:33.817Z"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string",
            "example": "2025-03-24T16:02:33.817Z"
          },
          "product": {
            "$ref": "#/components/schemas/EcommerceProductBasePaginateDto"
          },
          "language": {
            "$ref": "#/components/schemas/LanguageDto"
          }
        },
        "required": [
          "id",
          "slug",
          "title",
          "description",
          "short_description",
          "meta_title",
          "meta_description",
          "meta_keywords",
          "date_and_denomination",
          "tax_note",
          "created_at",
          "updated_at",
          "product",
          "language"
        ]
      },
      "EcommerceProductPaginateDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EcommerceProductListItemDto"
            }
          },
          "meta": {
            "example": {
              "totalItems": 1,
              "itemCount": 1,
              "itemsPerPage": 10,
              "totalPages": 1,
              "currentPage": 1
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterMetaDto"
              }
            ]
          },
          "links": {
            "type": "object",
            "example": {
              "first": "string",
              "previous": "string",
              "next": "string",
              "last": "string"
            }
          }
        },
        "required": ["items", "meta", "links"]
      },
      "EcommerceProductBadgeDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "82949c36-bf62-4544-9e99-7414ce0ecd45"
          },
          "is_active": {
            "type": "boolean",
            "example": false
          },
          "created_at": {
            "format": "date-time",
            "type": "string",
            "example": "2025-06-03T13:44:52.555Z"
          },
          "certificate_provider_badge_id": {
            "type": "string",
            "example": "b1cfa913-c3eb-4d91-ad8c-c740733d63a6"
          },
          "product_id": {
            "type": "string",
            "example": "c359fb89-ab30-4cae-919c-7bdb39865ead"
          },
          "certificate_provider_badge": {
            "$ref": "#/components/schemas/CertificateProviderBadgeDto"
          }
        },
        "required": [
          "id",
          "is_active",
          "created_at",
          "certificate_provider_badge_id",
          "product_id",
          "certificate_provider_badge"
        ]
      },
      "ProductCategoryDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "bfc7da66-bea0-47f8-85ef-dbfe462378ea"
          },
          "product_id": {
            "type": "string",
            "example": "c359fb89-ab30-4cae-919c-7bdb39865ead"
          },
          "category_id": {
            "type": "string",
            "example": "4e9da0e5-42ee-4ade-a2aa-17f822ef4258"
          },
          "created_at": {
            "format": "date-time",
            "type": "string",
            "example": "2025-06-03T13:44:52.555Z"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string",
            "example": "2025-06-03T13:44:52.555Z"
          },
          "category": {
            "$ref": "#/components/schemas/CategoryDto"
          }
        },
        "required": [
          "id",
          "product_id",
          "category_id",
          "created_at",
          "updated_at",
          "category"
        ]
      },
      "EcommerceProductDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "c359fb89-ab30-4cae-919c-7bdb39865ead"
          },
          "product_identity": {
            "type": "string",
            "example": "sadasdsad"
          },
          "product_sku": {
            "type": "string",
            "example": "sadasdsad"
          },
          "product_web_sku": {
            "type": "string",
            "example": "sadasdsad-sxa8uj"
          },
          "country": {
            "$ref": "#/components/schemas/CountryDto"
          },
          "cert_number": {
            "type": "string",
            "example": "sadasdsad"
          },
          "coin_number": {
            "type": "string",
            "example": "517093"
          },
          "coin_our_grade": {
            "type": "number",
            "example": 10
          },
          "coin_grade_type": {
            "type": "string",
            "example": "10"
          },
          "coin_grade": {
            "type": "number",
            "example": 10
          },
          "coin_grade_suffix": {
            "type": "string",
            "example": " asdasd"
          },
          "coin_grade_prefix": {
            "type": "string",
            "example": "VG"
          },
          "coin_grade_text": {
            "type": "string",
            "example": "VG10 asdasd"
          },
          "year_text": {
            "type": "string",
            "example": "1853"
          },
          "year_date": {
            "format": "date-time",
            "type": "string",
            "example": "1853-01-01T00:00:00.000Z"
          },
          "is_second_hand": {
            "type": "boolean",
            "example": false
          },
          "is_consignment": {
            "type": "boolean",
            "example": false
          },
          "is_active": {
            "type": "boolean",
            "example": false
          },
          "is_on_hold": {
            "type": "boolean",
            "example": false
          },
          "status": {
            "type": "string",
            "example": "pending"
          },
          "quantity": {
            "type": "number",
            "example": 1
          },
          "price": {
            "type": "string",
            "example": "10"
          },
          "sold_date": {
            "format": "date-time",
            "type": "string",
            "example": null
          },
          "archived_at": {
            "format": "date-time",
            "type": "string",
            "example": null
          },
          "sold_price": {
            "type": "string",
            "example": "0"
          },
          "discount_price": {
            "type": "string",
            "example": "0"
          },
          "stars": {
            "type": "number",
            "example": 0
          },
          "created_at": {
            "format": "date-time",
            "type": "string",
            "example": "2025-05-23T09:48:36.131Z"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string",
            "example": "2025-06-03T13:44:52.584Z"
          },
          "product_master_image_id": {
            "type": "string",
            "example": "9c91b075-5172-421e-ad89-21760d065506"
          },
          "certificate_provider_id": {
            "type": "string",
            "example": "89db632f-47cb-4de9-b9d8-092c10c57ff8"
          },
          "xero_tenant_id": {
            "type": "string",
            "example": "5f7e2081-02c5-4df1-8799-7b6960f1194c"
          },
          "product_master_image": {
            "$ref": "#/components/schemas/ProductImageDto"
          },
          "product_images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductImageDto"
            }
          },
          "certificate_provider": {
            "$ref": "#/components/schemas/CertificateProviderDto"
          },
          "product_badges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EcommerceProductBadgeDto"
            }
          },
          "product_categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductCategoryDto"
            }
          }
        },
        "required": [
          "id",
          "product_identity",
          "product_sku",
          "product_web_sku",
          "country",
          "cert_number",
          "coin_number",
          "coin_our_grade",
          "coin_grade_type",
          "coin_grade",
          "coin_grade_suffix",
          "coin_grade_prefix",
          "coin_grade_text",
          "year_text",
          "year_date",
          "is_second_hand",
          "is_consignment",
          "is_active",
          "is_on_hold",
          "status",
          "quantity",
          "price",
          "sold_price",
          "discount_price",
          "stars",
          "created_at",
          "updated_at",
          "product_master_image_id",
          "certificate_provider_id",
          "xero_tenant_id",
          "product_master_image",
          "product_images",
          "certificate_provider",
          "product_badges",
          "product_categories"
        ]
      },
      "EcommerceProductGetDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "0ea59939-a34e-4d17-b5fe-ec8478588f55"
          },
          "slug": {
            "type": "string",
            "example": "great-britain-1853-sovereign-pcgs-ms212-asdasd-swpkkf"
          },
          "title": {
            "type": "string",
            "example": "1853 Sovereign"
          },
          "description": {
            "type": "string",
            "example": "<p>sadsadsad</p>"
          },
          "short_description": {
            "type": "string",
            "example": ""
          },
          "meta_title": {
            "type": "string",
            "example": "Great Britain, 1853 Sovereign, PCGS MS212 asdasd"
          },
          "meta_description": {
            "type": "string",
            "example": "Great Britain, 1853 Sovereign, PCGS MS212 asdasd"
          },
          "meta_keywords": {
            "type": "string",
            "example": "Great Britain, 1853 Sovereign, PCGS MS212 asdasd"
          },
          "created_at": {
            "format": "date-time",
            "type": "string",
            "example": "2025-06-03T13:44:52.555Z"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string",
            "example": "2025-06-03T13:44:52.555Z"
          },
          "product_id": {
            "type": "string",
            "example": "c359fb89-ab30-4cae-919c-7bdb39865ead"
          },
          "language_id": {
            "type": "string",
            "example": "94ea5659-b107-468a-ad53-8954ebfb32c5"
          },
          "product": {
            "$ref": "#/components/schemas/EcommerceProductDto"
          },
          "language": {
            "$ref": "#/components/schemas/LanguageDto"
          }
        },
        "required": [
          "id",
          "slug",
          "title",
          "description",
          "short_description",
          "meta_title",
          "meta_description",
          "meta_keywords",
          "created_at",
          "updated_at",
          "product_id",
          "language_id",
          "product",
          "language"
        ]
      },
      "CategorySlugDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Category ID"
          },
          "title": {
            "type": "string",
            "description": "Category title"
          },
          "slug": {
            "type": "string",
            "description": "Category slug"
          },
          "description": {
            "type": "string",
            "description": "Category description"
          },
          "meta_title": {
            "type": "string",
            "description": "Meta title"
          },
          "meta_description": {
            "type": "string",
            "description": "Meta description"
          },
          "category": {
            "description": "Category",
            "allOf": [
              {
                "$ref": "#/components/schemas/CategoryBaseDto"
              }
            ]
          },
          "language": {
            "description": "Language",
            "allOf": [
              {
                "$ref": "#/components/schemas/LanguageDto"
              }
            ]
          },
          "meta_keywords": {
            "type": "string",
            "description": "Meta keywords"
          },
          "created_at": {
            "format": "date-time",
            "type": "string",
            "description": "Category created at"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string",
            "description": "Category updated at"
          }
        },
        "required": ["id", "title", "slug", "created_at", "updated_at"]
      },
      "Array": {
        "type": "object",
        "properties": {}
      },
      "StripeSettingDto": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "example": true
          },
          "stripe_public_key": {
            "type": "string",
            "example": "pk_test_123"
          }
        },
        "required": ["enabled", "stripe_public_key"]
      },
      "CreateMessageDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the person sending the message",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "description": "Email of the person sending the message",
            "example": "john.doe@example.com"
          },
          "phone": {
            "type": "string",
            "description": "Phone number of the person sending the message (optional)",
            "example": "+1234567890"
          },
          "message": {
            "type": "string",
            "description": "Message content",
            "example": "I am interested in this product. Could you provide more details?"
          },
          "joinEmailList": {
            "type": "boolean",
            "description": "Whether the user wants to join the email list",
            "example": true,
            "default": false
          },
          "productId": {
            "type": "string",
            "description": "Product ID of the product the message is about (optional)",
            "example": "12345678-1234-1234-1234-123456789012"
          }
        },
        "required": ["name", "email", "message", "joinEmailList"]
      },
      "GuestCreateOrUpdateDto": {
        "type": "object",
        "properties": {
          "guest_uuid": {
            "type": "string",
            "example": "jstr92cauusd1hd5hj"
          },
          "ip_address": {
            "type": "string",
            "example": "127.0.0.1"
          },
          "user_agent": {
            "type": "string",
            "example": "user_agent"
          },
          "device": {
            "type": "string",
            "example": "web"
          },
          "device_type": {
            "type": "string",
            "example": "sad"
          },
          "device_model": {
            "type": "string",
            "example": "ada"
          }
        },
        "required": [
          "guest_uuid",
          "ip_address",
          "user_agent",
          "device",
          "device_type",
          "device_model"
        ]
      },
      "CartItemCreateDto": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "quantity": {
            "type": "number",
            "example": 1
          }
        },
        "required": ["productId", "quantity"]
      },
      "CartItemUpdateDto": {
        "type": "object",
        "properties": {
          "quantity": {
            "type": "number",
            "example": 1
          }
        },
        "required": ["quantity"]
      },
      "ManualAddressDto": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string",
            "example": "Feyyaz Can"
          },
          "last_name": {
            "type": "string",
            "example": "Kose"
          },
          "email": {
            "type": "string",
            "example": "feyyazcan.kose@gmail.com"
          },
          "phone": {
            "type": "string",
            "example": "905555555555"
          },
          "phone_code": {
            "type": "string",
            "example": "+90"
          },
          "address_line": {
            "type": "string",
            "example": "123 Main St"
          },
          "address_line2": {
            "type": "string",
            "example": "Apt 1"
          },
          "address_line3": {
            "type": "string",
            "example": "Floor 2"
          },
          "post_code": {
            "type": "string",
            "example": "12345"
          },
          "state_province": {
            "type": "string",
            "example": "State"
          },
          "town": {
            "type": "string",
            "example": "Town"
          },
          "country_id": {
            "type": "string",
            "example": "country_id"
          },
          "city_id": {
            "type": "string",
            "example": "city_id"
          }
        },
        "required": [
          "first_name",
          "last_name",
          "email",
          "phone",
          "phone_code",
          "address_line",
          "post_code",
          "state_province",
          "town",
          "country_id",
          "city_id"
        ]
      },
      "CheckoutDeliveryAddressDto": {
        "type": "object",
        "properties": {
          "select_shipping_address_id": {
            "type": "string",
            "example": "svm2yb3aeq",
            "description": "if you want to use an existing address, select it here"
          },
          "manual_address": {
            "description": "if manual address write it here",
            "allOf": [
              {
                "$ref": "#/components/schemas/ManualAddressDto"
              }
            ]
          }
        }
      },
      "CheckoutDeliveryMethodDto": {
        "type": "object",
        "properties": {
          "shipping_method": {
            "type": "string",
            "example": "standard",
            "description": "delivery method",
            "enum": ["STANDARD", "EXPEDITED", "EXPRESS_DOMESTIC"]
          }
        },
        "required": ["shipping_method"]
      },
      "CheckoutShippingCoverDto": {
        "type": "object",
        "properties": {
          "is_shipping_cover": {
            "type": "boolean",
            "example": false,
            "description": "if you want to use shipping cover"
          }
        },
        "required": ["is_shipping_cover"]
      },
      "CheckoutPaymentResponseDto": {
        "type": "object",
        "properties": {
          "redirect": {
            "type": "string",
            "example": "https://example.com"
          },
          "orderNo": {
            "type": "string",
            "example": "123456"
          }
        },
        "required": ["redirect"]
      },
      "CheckoutPaymentDto": {
        "type": "object",
        "properties": {
          "payment_method": {
            "type": "string",
            "example": "stripe",
            "enum": ["CREDIT_CARD", "BANK_TRANSFER", "POS_CREDIT_CARD"]
          },
          "paymentMethodId": {
            "type": "string",
            "example": "stripe",
            "enum": ["CREDIT_CARD", "BANK_TRANSFER", "POS_CREDIT_CARD"]
          }
        },
        "required": ["payment_method", "paymentMethodId"]
      },
      "MailListCreateDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Feyyaz Can Köse"
          },
          "email": {
            "type": "string",
            "example": "feyyazcankose@gmail.com"
          }
        },
        "required": ["name", "email"]
      },
      "FormCreateDto": {
        "type": "object",
        "properties": {
          "page_id": {
            "type": "string",
            "description": "This is the id of the page",
            "example": "12345678-1234-1234-1234-123456789012"
          },
          "form_name": {
            "type": "string",
            "description": "Page in form name",
            "example": "Contact Form"
          },
          "email": {
            "type": "string",
            "description": "Email of the person sending the message",
            "example": "john.doe@example.com"
          },
          "data": {
            "type": "object",
            "description": "Phone number of the person sending the message (optional)",
            "example": {
              "name": "John Doe",
              "email": "john.doe@example.com",
              "phone": "+1234567890",
              "message": "Hello, this is a test message."
            }
          }
        },
        "required": ["page_id", "form_name", "email"]
      },
      "UserUpdateDto": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string",
            "description": "User first name",
            "example": "John"
          },
          "last_name": {
            "type": "string",
            "description": "User last name",
            "example": "Doe"
          },
          "is_subscribe_email": {
            "type": "boolean",
            "description": "User subscribe email",
            "example": true
          },
          "email": {
            "type": "string",
            "description": "User email",
            "example": "john.doe@example.com"
          },
          "phone": {
            "type": "string",
            "description": "User phone",
            "example": "905555555555"
          },
          "phone_code": {
            "type": "string",
            "description": "User phone",
            "example": "+90"
          }
        }
      },
      "PasswordUpdateDto": {
        "type": "object",
        "properties": {
          "old_password": {
            "type": "string",
            "description": "Old password",
            "example": "old_password"
          },
          "new_password": {
            "type": "string",
            "description": "New password",
            "example": "new_password"
          }
        },
        "required": ["old_password", "new_password"]
      },
      "AddressCreateDto": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string",
            "example": "John"
          },
          "last_name": {
            "type": "string",
            "example": "Doe"
          },
          "company_name": {
            "type": "string",
            "example": "Company Name"
          },
          "phone": {
            "type": "string",
            "example": "905555555555"
          },
          "phone_code": {
            "type": "string",
            "example": "+90"
          },
          "address_line": {
            "type": "string",
            "example": "123 Main St"
          },
          "address_line2": {
            "type": "string",
            "example": "Apt 1"
          },
          "state_province": {
            "type": "string",
            "example": "Apt 1"
          },
          "town": {
            "type": "string",
            "example": "Apt 1"
          },
          "address_line3": {
            "type": "string",
            "example": "123 Main St"
          },
          "post_code": {
            "type": "string",
            "example": "12345"
          },
          "country_id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "is_default": {
            "type": "boolean",
            "example": true
          },
          "city_id": {
            "type": "string",
            "example": "svm2yb3aeq"
          }
        },
        "required": [
          "first_name",
          "last_name",
          "company_name",
          "phone",
          "phone_code",
          "address_line",
          "address_line2",
          "state_province",
          "town",
          "address_line3",
          "post_code",
          "country_id",
          "is_default",
          "city_id"
        ]
      },
      "AddressUpdateDto": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string",
            "example": "John"
          },
          "last_name": {
            "type": "string",
            "example": "Doe"
          },
          "company_name": {
            "type": "string",
            "example": "Company Name"
          },
          "phone": {
            "type": "string",
            "example": "905555555555"
          },
          "phone_code": {
            "type": "string",
            "example": "+90"
          },
          "address_line": {
            "type": "string",
            "example": "123 Main St"
          },
          "address_line2": {
            "type": "string",
            "example": "Apt 1"
          },
          "state_province": {
            "type": "string",
            "example": "Apt 1"
          },
          "town": {
            "type": "string",
            "example": "Apt 1"
          },
          "address_line3": {
            "type": "string",
            "example": "123 Main St"
          },
          "post_code": {
            "type": "string",
            "example": "12345"
          },
          "country_id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "is_default": {
            "type": "boolean",
            "example": true
          },
          "city_id": {
            "type": "string",
            "example": "svm2yb3aeq"
          }
        },
        "required": [
          "first_name",
          "last_name",
          "company_name",
          "phone",
          "phone_code",
          "address_line",
          "address_line2",
          "state_province",
          "town",
          "address_line3",
          "post_code",
          "country_id",
          "is_default",
          "city_id"
        ]
      },
      "EcommerceOrderDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "svm2yb3aeq"
          },
          "order_no": {
            "type": "string",
            "example": "ORD-123456"
          },
          "status": {
            "type": "string",
            "example": "PENDING",
            "enum": [
              "PENDING",
              "PROCESSING",
              "ON_HOLD",
              "SHIPPED",
              "CANCELED",
              "COMPLETE"
            ]
          },
          "payment_method": {
            "type": "string",
            "example": "CREDIT_CARD",
            "enum": ["CREDIT_CARD", "BANK_TRANSFER", "POS_CREDIT_CARD"]
          },
          "comment": {
            "type": "string",
            "example": "comment"
          },
          "note": {
            "type": "string",
            "example": "note"
          },
          "order_price_id": {
            "type": "string",
            "example": "order_price_id"
          },
          "order_manual_id": {
            "type": "string",
            "example": "order_manual_id"
          },
          "order_customer_id": {
            "type": "string",
            "example": "order_customer_id"
          },
          "invoice_no": {
            "type": "string",
            "example": "invoice_no"
          },
          "invoice_date": {
            "format": "date-time",
            "type": "string",
            "example": "2025-05-22T19:27:25.000Z"
          },
          "order_price": {
            "$ref": "#/components/schemas/OrderPriceDto"
          },
          "order_manual": {
            "$ref": "#/components/schemas/OrderManualDto"
          },
          "order_customer": {
            "$ref": "#/components/schemas/OrderCustomerDto"
          },
          "created_at": {
            "format": "date-time",
            "type": "string",
            "example": "2025-05-22T19:27:25.000Z"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string",
            "example": "2025-05-22T19:27:25.000Z"
          }
        },
        "required": [
          "id",
          "order_no",
          "status",
          "payment_method",
          "order_price_id",
          "order_manual_id",
          "order_customer_id",
          "created_at",
          "updated_at"
        ]
      },
      "ProductStarCreateDto": {
        "type": "object",
        "properties": {
          "product_id": {
            "type": "string",
            "example": "svm2yb3aeq"
          }
        },
        "required": ["product_id"]
      },
      "CountryPaginateDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CountryDto"
            }
          },
          "meta": {
            "example": {
              "totalItems": 1,
              "itemCount": 1,
              "itemsPerPage": 10,
              "totalPages": 1,
              "currentPage": 1
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterMetaDto"
              }
            ]
          },
          "links": {
            "type": "object",
            "example": {
              "first": "string",
              "previous": "string",
              "next": "string",
              "last": "string"
            }
          }
        },
        "required": ["items", "meta", "links"]
      },
      "CountryListDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CountryDto"
            }
          }
        },
        "required": ["items"]
      },
      "CityPaginateDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CityDto"
            }
          },
          "meta": {
            "example": {
              "totalItems": 1,
              "itemCount": 1,
              "itemsPerPage": 10,
              "totalPages": 1,
              "currentPage": 1
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/FilterMetaDto"
              }
            ]
          },
          "links": {
            "type": "object",
            "example": {
              "first": "string",
              "previous": "string",
              "next": "string",
              "last": "string"
            }
          }
        },
        "required": ["items", "meta", "links"]
      },
      "CityListDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CityDto"
            }
          }
        },
        "required": ["items"]
      }
    }
  }
}
